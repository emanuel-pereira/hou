{"version":3,"sources":["assets/img/banner.jpg","actions/actionsRoom.js","reducers/roomReducer.js","actions/actionsGrid.js","reducers/gridsReducer.js","actions/actionsRoomsMonitoring.js","reducers/roomMonitoringReducer.js","actions/actionsArea.js","reducers/areaMonitoringReducer.js","views/Home.jsx","actions/actionsGeoArea.js","components/project/GeoAreaComponents/CreateGeoArea.jsx","components/project/GeoAreaComponents/GeoAreaTable.jsx","components/project/GeoAreaComponents/GADetailList.jsx","components/project/GeoAreaComponents/CreateNewExtSensor.js","components/project/GeoAreaComponents/GASensors.jsx","views/HouseArea.jsx","components/project/RoomComponents/RoomTable.jsx","components/project/RoomComponents/CreateRoom.js","components/project/RoomComponents/UpdateRoom.js","components/project/RoomComponents/RoomDetailList.jsx","components/project/RoomComponents/CreateNewIntSensor.js","components/project/RoomComponents/RoomSensors.jsx","views/Room.jsx","components/project/GridComponents/CreateGrid.jsx","components/project/GridComponents/GridTable.jsx","components/project/GridComponents/GridRooms.jsx","views/HouseGrid.jsx","components/project/HouseMonitoring/HouseArea/AreaCurrentTemp.js","components/project/HouseMonitoring/HouseArea/AreaLastLowTemp.js","components/project/HouseMonitoring/HouseArea/AreaFirstHighTemp.js","components/project/HouseMonitoring/HouseArea/AreaHighAmpliTemp.js","components/project/HouseMonitoring/HouseArea/AreaMonitoringMenu.js","components/project/HouseMonitoring/HouseMonitoring.js","components/project/RoomMonitoringComponents/RoomMonitoringTable.js","components/project/RoomMonitoringComponents/RoomCurrentTemperature.js","components/project/RoomMonitoringComponents/RoomMaxTemperature.js","components/project/RoomMonitoringComponents/RoomMonitoring.js","views/RoomMonitoringMenu.jsx","actions/actionsLogin.js","reducers/loginReducer.js","reducers/geoAreaReducer.js","store/configureStore.js","LoginPage/LoginPage.jsx","components/Sidebar/Sidebar.jsx","layouts/Admin.jsx","layouts/Regular.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","index.js","logo.png"],"names":["module","exports","__webpack_require__","p","FETCH_ROOMS_STARTED","FETCH_ROOMS_SUCCESS","FETCH_ROOMS_FAILURE","FETCH_ROOM_DETAILS_STARTED","FETCH_ROOM_DETAILS_SUCCESS","FETCH_ROOM_DETAILS_FAILURE","ADD_ROOM","FETCH_ROOM_SENSORS_SUCCESS","ADD_SENSOR","FETCH_ROOM_SENSORS_FAILURE","FETCH_SENSORTYPES_SUCCESS","fetchRooms","dispatch","type","axios","get","then","res","rooms","data","payload","Object","toConsumableArray","catch","err","message","error","defaults","headers","common","JSON","parse","localStorage","getItem","fetchRoomDetails","id","roomId","fetchRoomDetailsStarted","concat","fetchRoomDetailsSuccess","details","createRoomSuccess","description","floor","length","width","height","updateRoomSuccess","fetchRoomSensors","sensors","fetchRoomSensorsSuccess","_embedded","internalSensorDToes","fetchRoomSensorsFailure","createSensorSuccess","roomID","name","sensorTypeName","sensorType","startDate","unit","active","fetchSensorTypes","sTypes","sensorTypes","initialstate","loading","roomReducer","state","arguments","undefined","action","objectSpread","FETCH_HOUSEGRID_STARTED","FETCH_HOUSEGRID_SUCCESS","FETCH_HOUSEGRID_FAILURE","ADD_HOUSEGRID","FETCH_HOUSEGRID_ROOMS","fetchHouseGrids","housegrids","createHouseGridSuccess","designation","fetchHouseGridRooms","houseGrids","houseGridRooms","gridsReducer","FETCH_CURR_TEMP_ROOM_SUCCESS","FETCH_CURR_TEMP_ROOM_FAILURE","FETCH_CURR_TEMP_ROOM_STARTED","fetchCurrTempRooms","fetchCurrTempRoomsStarted","temperature","FETCH_ROOMS_MAX_TEMP_STARTED","FETCH_ROOMS_MAX_TEMP_SUCCESS","FETCH_ROOMS_MAX_TEMP_FAILURE","fetchRoomMaxTemp","day","fetchRoomMaxTempStarted","maxTemperature","roomCurrentTemp","roomMaxTemp","roomMonitoringReducer","value","FETCH_CURRENTTEMP_STARTED","FETCH_CURRENTTEMP_SUCCESS","FETCH_CURRENTTEMP_FAILURE","fetchCurrentTemp","currentTemp","FETCH_LASTLOWTEMPDAY_STARTED","FETCH_LASTLOWTEMPDAY_SUCCESS","FETCH_LASTLOWTEMPDAY_FAILURE","fetchLastLowTempDay","endDate","fetchLastLowTempDayStarted","lowTemp","FETCH_FIRSTHIGHTEMPDAY_STARTED","FETCH_FIRSTHIGHTEMPDAY_SUCCESS","FETCH_FIRSTHIGHTEMPDAY_FAILURE","fetchFirstHighTempDay","fetchFirstHighTempDayStarted","highTemp","FETCH_HIGHAMPLITEMPDAY_STARTED","FETCH_HIGHAMPLITEMPDAY_SUCCESS","FETCH_HIGHAMPLITEMPDAY_FAILURE","fetchHighAmpliTempDay","fetchHighAmpliTempDayStarted","highAmpli","lastLowTemp","firstHighTemp","highAmpliTemp","areaMonitoringReducer","Home","react_default","a","createElement","Fragment","className","alt","src","require","React","Component","FETCH_GEOAREAS_STARTED","FETCH_GEOAREAS_SUCCESS","FETCH_GEOAREAS_FAILURE","FETCH_GEOAREASTYPES_SUCCESS","DELETE_EXT_SENSOR","fetchGeoAreas","geoareas","geographicalAreaDToes","FETCH_GEOAREA_DETAILS_SUCCESS","FETCH_GEOAREA_DETAILS_FAILURE","fetchGADetails","ADD_GEOAREA","createGeoAreaSuccess","latitude","longitude","altitude","fetchGeoAreaTypes","gaTypes","typeGAs","FETCH_GEOAREA_SENSORS_SUCCESS","FETCH_GEOAREA_SENSORS_FAILURE","fetchGASensors","gaId","fetchGASensorsSuccess","externalSensorDToes","fetchGASensorsFailure","createExtSensorSuccess","deleteSensor","idGA","delete","CreateGeoArea","gaType","handleInputChange","e","_this","setState","defineProperty","target","handleSubmit","preventDefault","props","onAddGeoArea","handleReset","onClose","this","onfetchGeoAreaTypes","Card","CardBody","onSubmit","placeholder","onChange","selected","disabled","hidden","map","Button","color","onClick","connect","geoArea","_ref","post","identification","location","occupation","response","createGeoArea","GeoAreaTable","onfetchGADetails","onShowDetails","onfetchGASensors","onShowSensors","onfetchGeoAreas","_this2","rows","row","index","key","Table","GADetailList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeEditMode","isInEditMode","renderDefaultView","_this$props$details","CardTitle","isHidden","renderEditView","CreateNewIntSensor","onCreateSensor","sensorBehavior","onfetchStypes","sensor","_ref2","locationDTO","sensorBehaviorDTO","createSensor","GASensors","onDeleteSensor","CreateNewExtSensor","_this$props$sensors","slice","HouseArea","isHiddenCreate","showDetails","showSensors","toggleHidden","bind","GeoAreaComponents_CreateGeoArea","Row","Col","md","GeoAreaComponents_GADetailList","GeoAreaComponents_GASensors","GeoAreaComponents_GeoAreaTable","RoomTable","onfetchRoomDetails","onfetchRoomSensors","onfetchRooms","options","place","icon","autoDismiss","CreateRoom","onAddRoom","refs","notify","notificationAlert","dist_default","ref","class","room","createRoom","UpdateRoom","onEditRoom","put","updateRoom","RoomDetailList","RoomComponents_UpdateRoom","_ref3","RoomSensors","RoomComponents_CreateNewIntSensor","Room","toggleHiddenRooms","RoomComponents_RoomTable","RoomComponents_RoomDetailList","RoomComponents_RoomSensors","RoomComponents_CreateRoom","CreateGrid","onAddGrid","grid","createHouseGrid","GridTable","onfetchHouseGridRooms","onShowRooms","onfetchHouseGrids","grids","GridRooms","HouseGrid","showRooms","GridComponents_CreateGrid","GridComponents_GridTable","GridComponents_GridRooms","AreaCurrentTemp","onGetCurrentTemp","_this$props$currentTe","moment","format","readingValue","readingDateAndTime","AreaLastLowTemp","changeFirstDate","chosenDate","firstDate","changeSecondDate","secondDate","showResult","assertThisInitialized","getResult","onGetTemperature","_this$props$lastLowTe","entry_default","AreaFirstHighTemp","_this$props$firstHigh","AreaHighAmpliTemp","_this$props$highAmpli","AreaMonitoring","showCurrent","showLastLow","showFirstHigh","showHighAmpli","clickToShowCurrent","clickToShowLastLow","clickToShowFirstHigh","clickToShowHighAmpli","HouseArea_AreaCurrentTemp","HouseArea_AreaLastLowTemp","HouseArea_AreaFirstHighTemp","HouseArea_AreaHighAmpliTemp","HouseMonitoring","AreaMonitoringMenu","RoomMonitoringTable","onfetchCurrTempRooms","onShowCurrTempRooms","onfetchRoomMaxTemp","onShowfetchRoomMaxTemp","RoomCurrentTemperature","_this$props$roomCurre","RoomMaxTemperature","chooseDay","chosenDay","render","_this$props$roomMaxTe","onchange","RoomMonitoring","showCurrTempRooms","showFetchRoomMaxTemp","RoomMonitoringComponents_RoomMonitoringTable","RoomMonitoringComponents_RoomCurrentTemperature","RoomMonitoringComponents_RoomMaxTemperature","RoomMonitoringMenu","RoomMonitoringComponents_RoomMonitoring","USER_LOGIN_STARTED","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","routes","sendUsernamePassword","username","password","stringify","Content-Type","path","component","layout","setItem","setRoutes","console","log","token","window","reload","initialState","currentUser","isLoggedIn","loginReducer","geoAreaReducer","rootReducer","combineReducers","login","LoginPage","_Component","submitted","handleChange","inherits","createClass","_e$target","_this$state","loggingIn","_this$state2","style","position","left","top","transform","display","marginLeft","marginRight","logo","htmlFor","Spinner","ps","Header","isOpen","dropdownOpen","toggle","dropdownToggle","sidebarToggle","createRef","brandName","prop","href","indexOf","document","documentElement","classList","current","innerWidth","addEventListener","updateColor","history","pathname","Navbar","expand","Container","fluid","openSidebar","NavbarBrand","getBrand","NavbarToggler","Collapse","navbar","Nav","Dropdown","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","handleSelection","tag","removeItem","Footer","default","Date","getYear","Sidebar","activeRoute","sidebar","routeName","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","pro","react_router_dom","to","activeClassName","Dashboard","handleActiveClick","handleBgClick","backgroundColor","mainPanel","body","scrollTop","scrollingElement","components_Sidebar_Sidebar","assign","DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","store","createStore","applyMiddleware","thunk","ReactDOM","react_redux_es","LoginPage_LoginPage","getElementById","decode","sub","Admin","Regular"],"mappings":"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","file":"static/js/main.ef888e8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.0e686d9c.jpg\";","import axios from 'axios';\n\nexport const FETCH_ROOMS_STARTED = 'FETCH_ROOMS_STARTED'\nexport const FETCH_ROOMS_SUCCESS = 'FETCH_ROOMS_SUCCESS'\nexport const FETCH_ROOMS_FAILURE = 'FETCH_ROOMS_FAILURE'\nexport const FETCH_ROOM_DETAILS_STARTED = 'FETCH_ROOM_DETAILS_STARTED'\nexport const FETCH_ROOM_DETAILS_SUCCESS = 'FETCH_ROOM_DETAILS_SUCCESS'\nexport const FETCH_ROOM_DETAILS_FAILURE = 'FETCH_ROOM_DETAILS_FAILURE'\nexport const ADD_ROOM = 'ADD_ROOM'\nexport const UPDATE_ROOM = 'UPDATE_ROOM'\nexport const FETCH_ROOM_SENSORS_SUCCESS = 'FETCH_ROOM_SENSORS_SUCCESS'\nexport const ADD_SENSOR= 'ADD_SENSOR'\nexport const FETCH_ROOM_SENSORS_FAILURE ='FETCH_ROOM_SENSORS_FAILURE'\nexport const FETCH_SENSORTYPES_SUCCESS = 'FETCH_SENSORTYPES_SUCCESS'\n\naxios.defaults.headers.common['Authorization'] = JSON.parse(localStorage.getItem('token')); // for all requests\n\nexport function fetchRooms (){\n  return dispatch => {\n    dispatch(fetchRoomsStarted());\n    axios\n      .get(`https://localhost:8443/rooms`)\n      .then(res => {\n        dispatch(fetchRoomsSuccess(res.data['_embedded']['roomDToes']));\n      })\n      .catch(err => {\n        dispatch(fetchRoomsFailure(err.message));\n      });\n  };\n};\n\nexport function fetchRoomsStarted () {\n  return {\n    type: FETCH_ROOMS_STARTED,\n  }\n}\n\nexport function fetchRoomsSuccess(rooms) {\n  return {\n    type: FETCH_ROOMS_SUCCESS,\n    payload:{\n      data:\n        [...rooms]\n    }\n\n  }\n}\nexport function fetchRoomsFailure(message) {\n  return {\n    type: FETCH_ROOMS_FAILURE,\n    payload: {\n      error: message\n    }\n  }\n}\n\nexport const fetchRoomDetails = (id) => {\n  return dispatch => {\n    dispatch(fetchRoomDetailsStarted(id));\n    axios\n      .get(`https://localhost:8443/rooms/${id}`)\n      .then(res => {\n        dispatch(fetchRoomDetailsSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchRoomDetailsFailure(err.message));\n      });\n  };\n};\n\n\nexport function fetchRoomDetailsStarted(id) {\n  return {\n    type: FETCH_ROOM_DETAILS_STARTED,\n    payload:{\n      roomId: id\n    }\n  }\n}\n\nexport function fetchRoomDetailsSuccess(details) {\n  return {\n    type: FETCH_ROOM_DETAILS_SUCCESS,\n    payload:{\n      data: details\n    }\n\n  }\n}\nexport function fetchRoomDetailsFailure(message) {\n  return {\n    type: FETCH_ROOM_DETAILS_FAILURE,\n    payload: {\n      error: message\n    }\n  }\n}\n\n\nexport const createRoom = ({ id, description, floor, length, width, height }) => {\n  return (dispatch) => {\n    return axios.post(`https://localhost:8443/rooms/`, {id, description, floor, length, width, height})\n      .then(response => {\n        dispatch(createRoomSuccess(response.data))\n        dispatch(fetchRooms(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const createRoomSuccess =  (data) => {\n  return {\n    type: ADD_ROOM,\n    payload: {\n      id: data.id,\n      description: data.description,\n      floor: data.floor,\n      length: data.length,\n      width: data.width,\n      height: data.height\n    }\n  }\n};\n\nexport const updateRoom = ({ id, description, floor, length, width, height }) => {\n  return (dispatch) => {\n    return axios.put(`https://localhost:8443/rooms/${id}`, {id, description, floor, length, width, height})\n      .then(response => {\n        dispatch(updateRoomSuccess(response.data))\n        dispatch(fetchRoomDetailsSuccess(response.data))\n        dispatch(fetchRooms(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const updateRoomSuccess =  (data) => {\n  return {\n    type: UPDATE_ROOM,\n    payload: {\n      id: data.id,\n      description: data.description,\n      floor: data.floor,\n      length: data.length,\n      width: data.width,\n      height: data.height\n    }\n  }\n};\n\nexport const fetchRoomSensors = (id) => {\n  return dispatch => {\n    axios\n      .get(`https://localhost:8443/internalSensors/${id}/room`)\n      .then(res => {\n        dispatch(fetchRoomSensorsSuccess(res.data._embedded.internalSensorDToes,id));\n      })\n      .catch(err => {\n        dispatch(fetchRoomSensorsFailure(err.message,id));\n      });\n  };\n};\n\nexport function fetchRoomSensorsSuccess(sensors,id) {\n  return {\n    type: FETCH_ROOM_SENSORS_SUCCESS,\n    payload: {\n      data: sensors,\n      roomId: id,\n    }\n  };\n}\n\nexport function fetchRoomSensorsFailure(message,id) {\n  return {\n    type: FETCH_ROOM_SENSORS_FAILURE,\n    payload: {\n      error: message,\n      roomId:id\n    }\n  }\n}\nexport const createSensor = ({ id, roomId, name, sensorTypeName, startDate, unit, active }) => {\n  return (dispatch) => {\n    return axios.post(`https://localhost:8443/internalSensors/`,\n      {\n        id,\n        roomId,\n        sensorBehavior: {\n          name,\n          sensorType: {\n            type: sensorTypeName\n          },\n          startDate: startDate,\n          unit: unit,\n          active: active\n        }\n      }\n    )\n      .then(response => {\n        dispatch(createSensorSuccess(response.data))\n        dispatch(fetchRoomSensors(roomId))\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport const createSensorSuccess = (data) => {\n  return {\n    type: ADD_SENSOR,\n    payload: {\n      id: data.id,\n      roomId: data.roomID,\n      name: data.name,\n      sensorTypeName: data.sensorType,\n      startDate: data.startDate,\n      unit: 'C',\n      active: true,\n    }\n  }\n};\n\nexport function fetchSensorTypes() {\n  return dispatch => {\n    axios\n      .get(`https://localhost:8443/sensorTypes`)\n      .then(res => {\n        dispatch(fetchSensorTypesSuccess(res.data._embedded.sensorTypes));\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport function fetchSensorTypesSuccess(sTypes) {\n  return {\n    type: FETCH_SENSORTYPES_SUCCESS,\n    payload: {\n      data: [...sTypes]\n    }\n  }\n}","\nimport {\n  FETCH_ROOMS_STARTED,\n  FETCH_ROOMS_SUCCESS,\n  FETCH_ROOMS_FAILURE,\n  FETCH_ROOM_DETAILS_STARTED,\n  FETCH_ROOM_DETAILS_SUCCESS,\n  FETCH_ROOM_DETAILS_FAILURE,\n  ADD_ROOM,\n  FETCH_ROOM_SENSORS_SUCCESS,\n  FETCH_ROOM_SENSORS_FAILURE,\n  ADD_SENSOR,\n  FETCH_SENSORTYPES_SUCCESS,\n\n} from '../actions/actionsRoom'\n\nconst initialstate = {\n  rooms: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  details: {\n    roomId: 0,\n    loading: false,\n    error: null,\n    data: {},\n  },\n  sensors: {\n    data: [],\n    error: null,\n    roomId: null\n  },\n  sTypes: {\n    data: []\n  }\n};\n\n\nfunction roomReducer(state = initialstate, action) {\n  switch (action.type) {\n    case FETCH_ROOMS_STARTED:\n      return {\n        ...state,\n        rooms: {\n          loading: true,\n          error: null,\n          data: []\n        }\n      }\n    case FETCH_ROOMS_SUCCESS:\n      return {\n        ...state,\n        rooms: {\n          loading: false,\n          error: null,\n          data: [...action.payload.data]\n        }\n      }\n    case FETCH_ROOMS_FAILURE:\n      return {\n        ...state,\n        rooms: {\n          loading: false,\n          error: action.payload.error,\n          data: [],\n        }\n      }\n    case FETCH_ROOM_DETAILS_STARTED:\n      return {\n        ...state,\n        details: {\n          loading: true,\n          error: null,\n          data: {},\n          id: action.payload.id,\n        }\n      }\n    case FETCH_ROOM_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: {\n          loading: false,\n          error: null,\n          data: { ...action.payload.data },\n          id: state.details.id,\n        }\n      }\n    case FETCH_ROOM_DETAILS_FAILURE:\n      return {\n        ...state,\n        details: {\n          loading: false,\n          error: action.payload.error,\n          data: {},\n          id: 0,\n        }\n      }\n    case ADD_ROOM:\n      return {\n        ...state,\n        data: { ...action.payload.data },\n      }\n\n    case FETCH_ROOM_SENSORS_SUCCESS:\n      return {\n        ...state,\n        sensors: {\n          data: [...action.payload.data],\n          error: null,\n          roomId: action.payload.roomId\n        }\n      }\n    case FETCH_ROOM_SENSORS_FAILURE:\n      return {\n        ...state,\n        sensors: {\n          data: [],\n          error: action.payload.error,\n          roomId: action.payload.roomId\n        }\n      }\n    case ADD_SENSOR:\n      return {\n        ...state,\n      \n    }\n    case FETCH_SENSORTYPES_SUCCESS:\n      return {\n        ...state,\n        sTypes: {\n          data: [...action.payload.data],\n        }\n      }\n    default:\n      return state\n  }\n}\nexport default roomReducer;\n","import axios from 'axios';\nexport const FETCH_HOUSEGRID_STARTED = 'FETCH_HOUSEGRID_STARTED'\nexport const FETCH_HOUSEGRID_SUCCESS = 'FETCH_HOUSEGRIDS_SUCCESS'\nexport const FETCH_HOUSEGRID_FAILURE = 'FETCH_HOUSEGRID_FAILURE'\nexport const ADD_HOUSEGRID = 'ADD_HOUSEGRID';\nexport const FETCH_HOUSEGRID_ROOMS = 'FETCH_HOUSEGRID_ROOMS'\n\nexport function fetchHouseGrids() {\n    return dispatch => {\n        dispatch(fetchHouseGridsStarted());\n        axios\n            .get(`https://localhost:8443/housegrids`)\n            .then(res => {\n                dispatch(fetchHouseGridsSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchHouseGridsFailure(err.message));\n            });\n    };\n};\n\nexport function fetchHouseGridsStarted() {\n    return {\n        type: FETCH_HOUSEGRID_STARTED,\n\n    }\n}\n\nexport function fetchHouseGridsSuccess(housegrids) {\n    return {\n        type: FETCH_HOUSEGRID_SUCCESS,\n        payload: {\n            data:\n                [...housegrids]\n        }\n\n    }\n}\n\nexport function fetchHouseGridsFailure(message) {\n    return {\n        type: FETCH_HOUSEGRID_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\nexport const createHouseGrid = ({ id, designation }) => {\n    return (dispatch) => {\n        return axios.post(`https://localhost:8443/housegrids/`, { id, designation })\n            .then(response => {\n                dispatch(createHouseGridSuccess(response.data))\n                dispatch(fetchHouseGrids(response.data))\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport const createHouseGridSuccess = (data) => {\n    return {\n        type: ADD_HOUSEGRID,\n        payload: {\n            designation: data.designation,\n        }\n    }\n};\n\nexport const fetchHouseGridRooms = (id) => {\n    return dispatch => {\n      axios\n        .get(`https://localhost:8443/housegrids/${id}/rooms`)\n        .then(res => {\n          dispatch(fetchHouseGridRoomsSuccess(res.data.rooms));\n        })\n        .catch(error => {\n          throw(error);\n        });\n    };\n  };\n\n\nexport function fetchHouseGridRoomsSuccess(rooms) {\n    return {\n        type: FETCH_HOUSEGRID_ROOMS,\n        payload: {\n            data: rooms\n        }\n    };\n}","import {\n    FETCH_HOUSEGRID_STARTED,\n    FETCH_HOUSEGRID_SUCCESS,\n    FETCH_HOUSEGRID_FAILURE,\n    ADD_HOUSEGRID,\n    FETCH_HOUSEGRID_ROOMS,\n\n} from '../actions/actionsGrid'\n\nconst initialstate = {\n    houseGrids: {\n        loading: false,\n        error: null,\n        data: [],\n    },\n    houseGridRooms: {\n        data: [],\n    }\n}\n\nfunction gridsReducer(state = initialstate, action) {\n    switch (action.type) {\n        case FETCH_HOUSEGRID_STARTED:\n            return {\n                ...state,\n                houseGrids: {\n                    loading: true,\n                    error: null,\n                    data: []\n                }\n            }\n        case FETCH_HOUSEGRID_SUCCESS:\n            return {\n                ...state,\n                houseGrids: {\n                    loading: false,\n                    error: null,\n                    data: [...action.payload.data]\n                }\n            }\n        case FETCH_HOUSEGRID_FAILURE:\n            return {\n                ...state,\n                houseGrids: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: [],\n                }\n            }\n        case ADD_HOUSEGRID:\n            return {\n                ...state,\n                data: { ...action.payload.data },\n            }\n        case FETCH_HOUSEGRID_ROOMS:\n            return {\n                ...state,\n                houseGridRooms: {\n                    data: [ ...action.payload.data ],\n                }\n            }\n        default:\n            return state\n            }\n    }\n    export default gridsReducer;\n","import axios from 'axios';\n\nexport const FETCH_CURR_TEMP_ROOM_SUCCESS = 'FETCH_CURR_TEMP_ROOM_SUCCESS'\nexport const FETCH_CURR_TEMP_ROOM_FAILURE = 'FETCH_CURR_TEMP_ROOM_FAILURE'\nexport const FETCH_CURR_TEMP_ROOM_STARTED = 'FETCH_CURR_TEMP_ROOM_STARTED'\n\n\nexport const fetchCurrTempRooms = (id) => {\n    return dispatch => {\n        dispatch(fetchCurrTempRoomsStarted(id));\n        axios\n            .get(`https://localhost:8443/rooms/${id}/currentTemperature`)\n            .then(res => {\n                dispatch(fetchCurrTempRoomsSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchCurrTempRoomsFailure(err.message));\n            });\n    };\n};\n\nexport function fetchCurrTempRoomsStarted(id) {\n    return {\n        type: FETCH_CURR_TEMP_ROOM_STARTED,\n        payload: {\n            roomId: id,\n        }\n\n    }\n}\n\nexport function fetchCurrTempRoomsSuccess(temperature) {\n\n    return {\n\n        type: FETCH_CURR_TEMP_ROOM_SUCCESS,\n        payload: {\n            data: {...temperature}\n\n        }\n    }\n}\n\nexport function fetchCurrTempRoomsFailure(message) {\n    return {\n        type: FETCH_CURR_TEMP_ROOM_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\n\nexport const FETCH_ROOMS_MAX_TEMP_STARTED = 'FETCH_ROOMS_MAX_TEMP_STARTED'\nexport const FETCH_ROOMS_MAX_TEMP_SUCCESS = 'FETCH_ROOMS_MAX_TEMP_SUCCESS'\nexport const FETCH_ROOMS_MAX_TEMP_FAILURE = 'FETCH_ROOMS_MAX_TEMP_FAILURE'\n\nexport const fetchRoomMaxTemp = (id, day) => {\n    return dispatch => {\n        dispatch(fetchRoomMaxTempStarted(id, day));\n        axios\n            .get(`https://localhost:8443/rooms/${id}/maxTemperature?day=${day}`)\n            .then(res => {\n                dispatch(fetchRoomMaxTempSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchRoomMaxTempFailure(err.message));\n            });\n    };\n};\n\n\nexport function fetchRoomMaxTempStarted(id, day) {\n    return {\n        type: FETCH_ROOMS_MAX_TEMP_STARTED,\n\n        payload:\n            {\n                roomId: id,\n                day: day,\n\n            }\n\n    }\n}\n\nexport function fetchRoomMaxTempSuccess(maxTemperature) {\n\n    return {\n\n        type: FETCH_ROOMS_MAX_TEMP_SUCCESS,\n        payload: {\n            data: {...maxTemperature},\n\n        }\n    }\n}\n\nexport function fetchRoomMaxTempFailure(message) {\n    return {\n        type: FETCH_ROOMS_MAX_TEMP_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\n","import {\n\n    FETCH_CURR_TEMP_ROOM_SUCCESS,\n    FETCH_CURR_TEMP_ROOM_FAILURE,\n    FETCH_CURR_TEMP_ROOM_STARTED,\n\n    FETCH_ROOMS_MAX_TEMP_STARTED,\n    FETCH_ROOMS_MAX_TEMP_SUCCESS,\n    FETCH_ROOMS_MAX_TEMP_FAILURE,\n\n} from '../actions/actionsRoomsMonitoring'\n\n\nconst initialstate = {\n    /*room: {\n        loading: false,\n        error: null,\n        data: [],\n    },*/\n\n    roomCurrentTemp: {\n        roomId: 0,\n        loading: false,\n        error: null,\n        data: {},\n    },\n\n    roomMaxTemp: {\n        id: 0,\n        loading: false,\n        error: null,\n        data: {},\n        day: null,\n    },\n};\n\n\nfunction roomMonitoringReducer(state = initialstate, action) {\n    switch (action.type) {\n        case FETCH_CURR_TEMP_ROOM_STARTED:\n            return {\n                ...state,\n                roomCurrentTemp: {\n                    roomId: action.payload.id,\n                    loading: true,\n                    error: null,\n                    data: {},\n\n                }\n            }\n        case FETCH_CURR_TEMP_ROOM_SUCCESS:\n            return {\n                ...state,\n                roomCurrentTemp: {\n                    roomId: state.roomCurrentTemp.roomId,\n                    data: {...action.payload.data}\n\n                }\n            }\n        case FETCH_CURR_TEMP_ROOM_FAILURE:\n            return {\n                ...state,\n                roomCurrentTemp: {\n                    loading: false,\n                    error: state.roomCurrentTemp.error,\n                    value: {},\n                    roomId: 0,\n                }\n            }\n\n        case FETCH_ROOMS_MAX_TEMP_STARTED:\n            return {\n                ...state,\n                roomMaxTemp: {\n                    loading: true,\n                    error: null,\n                    data: {},\n                    id: null,\n                    day: null,\n                }\n            }\n        case FETCH_ROOMS_MAX_TEMP_SUCCESS:\n\n            return {\n                ...state,\n                roomMaxTemp: {\n                    data: {...action.payload.data},\n                    day: state.roomMaxTemp.day,\n                    id: state.roomMaxTemp.id,\n                }\n            }\n        case FETCH_ROOMS_MAX_TEMP_FAILURE:\n            return {\n                ...state,\n                roomMaxTemp: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                    id: 0,\n                    day: null,\n                }\n            }\n        default:\n            return state\n    }\n}\n\nexport default roomMonitoringReducer;\n\n","import axios from 'axios';\n\nexport const FETCH_CURRENTTEMP_STARTED = 'FETCH_CURRENTTEMP_STARTED'\nexport const FETCH_CURRENTTEMP_SUCCESS = 'FETCH_CURRENTTEMP_SUCCESS'\nexport const FETCH_CURRENTTEMP_FAILURE = 'FETCH_CURRENTTEMP_FAILURE'\n\n\nexport const fetchCurrentTemp = () => {\n    return dispatch => {\n        dispatch(fetchCurrentTempStarted());\n        axios\n            .get(`https://localhost:8443/house/currentTemperature`)\n            .then(res => {\n                dispatch(fetchCurrentTempSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchCurrentTempFailure(err.message));\n            });\n    };\n};\n\nexport function fetchCurrentTempStarted () {\n    return {\n        type: FETCH_CURRENTTEMP_STARTED,\n    }\n}\n\nexport function fetchCurrentTempSuccess(currentTemp) {\n    return {\n        type: FETCH_CURRENTTEMP_SUCCESS,\n        payload:{\n            data: currentTemp\n        }\n\n    }\n}\nexport function fetchCurrentTempFailure(message) {\n    return {\n        type: FETCH_CURRENTTEMP_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\nexport const FETCH_LASTLOWTEMPDAY_STARTED = 'FETCH_LASTLOWTEMPDAY_STARTED'\nexport const FETCH_LASTLOWTEMPDAY_SUCCESS = 'FETCH_LASTLOWTEMPDAY_SUCCESS'\nexport const FETCH_LASTLOWTEMPDAY_FAILURE = 'FETCH_LASTLOWTEMPDAY_FAILURE'\n\n\nexport const fetchLastLowTempDay = (startDate,endDate) => {\n    return dispatch => {\n        dispatch(fetchLastLowTempDayStarted(startDate,endDate));\n        axios\n            .get(`https://localhost:8443/house/dailyMinimum?startDate=${startDate}&endDate=${endDate}`)\n            .then(res => {\n                dispatch(fetchLastLowTempDaySuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchLastLowTempDayFailure(err.message));\n            });\n    };\n};\n\nexport function fetchLastLowTempDayStarted (startDate,endDate) {\n    return {\n        type: FETCH_LASTLOWTEMPDAY_STARTED,\n        payload:{\n            startDate: startDate,\n            endDate: endDate\n        }\n    }\n}\n\nexport function fetchLastLowTempDaySuccess(lowTemp) {\n    return {\n        type: FETCH_LASTLOWTEMPDAY_SUCCESS,\n        payload:{\n            data:\n                {...lowTemp}\n        }\n\n    }\n}\nexport function fetchLastLowTempDayFailure(message) {\n    return {\n        type: FETCH_LASTLOWTEMPDAY_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\nexport const FETCH_FIRSTHIGHTEMPDAY_STARTED = 'FETCH_FIRSTHIGHTEMPDAY_STARTED'\nexport const FETCH_FIRSTHIGHTEMPDAY_SUCCESS = 'FETCH_FIRSTHIGHTEMPDAY_SUCCESS'\nexport const FETCH_FIRSTHIGHTEMPDAY_FAILURE = 'FETCH_FIRSTHIGHTEMPDAY_FAILURE'\n\n\nexport const fetchFirstHighTempDay = (startDate,endDate) => {\n    return dispatch => {\n        dispatch(fetchFirstHighTempDayStarted(startDate,endDate));\n        axios\n            .get(`https://localhost:8443/house/dailyMaximum?startDate=${startDate}&endDate=${endDate}`)\n            .then(res => {\n                dispatch(fetchFirstHighTempDaySuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchFirstHighTempDayFailure(err.message));\n            });\n    };\n};\n\nexport function fetchFirstHighTempDayStarted (startDate,endDate) {\n    return {\n        type: FETCH_FIRSTHIGHTEMPDAY_STARTED,\n        payload:{\n            startDate: startDate,\n            endDate: endDate\n        }\n    }\n}\n\nexport function fetchFirstHighTempDaySuccess(highTemp) {\n    return {\n        type: FETCH_FIRSTHIGHTEMPDAY_SUCCESS,\n        payload:{\n            data:\n                {...highTemp}\n        }\n\n    }\n}\nexport function fetchFirstHighTempDayFailure(message) {\n    return {\n        type: FETCH_FIRSTHIGHTEMPDAY_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\nexport const FETCH_HIGHAMPLITEMPDAY_STARTED = 'FETCH_HIGHAMPLITEMPDAY_STARTED'\nexport const FETCH_HIGHAMPLITEMPDAY_SUCCESS = 'FETCH_HIGHAMPLITEMPDAY_SUCCESS'\nexport const FETCH_HIGHAMPLITEMPDAY_FAILURE = 'FETCH_HIGHAMPLITEMPDAY_FAILURE'\n\n\nexport const fetchHighAmpliTempDay = (startDate,endDate) => {\n    return dispatch => {\n        dispatch(fetchHighAmpliTempDayStarted(startDate,endDate));\n        axios\n            .get(`https://localhost:8443/house/dailyMaxAmplitude?startDate=${startDate}&endDate=${endDate}`)\n            .then(res => {\n                dispatch(fetchHighAmpliTempDaySuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchHighAmpliTempDayFailure(err.message));\n            });\n    };\n};\n\nexport function fetchHighAmpliTempDayStarted (startDate,endDate) {\n    return {\n        type: FETCH_HIGHAMPLITEMPDAY_STARTED,\n        payload:{\n            startDate: startDate,\n            endDate: endDate\n        }\n    }\n}\n\nexport function fetchHighAmpliTempDaySuccess(highAmpli) {\n    return {\n        type: FETCH_HIGHAMPLITEMPDAY_SUCCESS,\n        payload:{\n            data:\n                {...highAmpli}\n        }\n\n    }\n}\nexport function fetchHighAmpliTempDayFailure(message) {\n    return {\n        type: FETCH_HIGHAMPLITEMPDAY_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n","import {\n    FETCH_CURRENTTEMP_FAILURE,\n    FETCH_CURRENTTEMP_STARTED,\n    FETCH_CURRENTTEMP_SUCCESS,\n\n    FETCH_FIRSTHIGHTEMPDAY_FAILURE,\n    FETCH_FIRSTHIGHTEMPDAY_STARTED,\n    FETCH_FIRSTHIGHTEMPDAY_SUCCESS,\n\n    FETCH_HIGHAMPLITEMPDAY_FAILURE,\n    FETCH_HIGHAMPLITEMPDAY_STARTED,\n    FETCH_HIGHAMPLITEMPDAY_SUCCESS,\n\n    FETCH_LASTLOWTEMPDAY_FAILURE,\n    FETCH_LASTLOWTEMPDAY_STARTED,\n    FETCH_LASTLOWTEMPDAY_SUCCESS\n\n} from \"../actions/actionsArea\";\n\n\n\nconst initialstate = {\n    currentTemp: {\n        loading: false,\n        error: null,\n        data: {}\n    },\n    lastLowTemp: {\n        loading: false,\n        error: null,\n        data: {},\n        startDate: 0,\n        endDate: 0,\n    },\n    firstHighTemp: {\n        loading: false,\n        error: null,\n        data: {},\n        startDate: 0,\n        endDate: 0,\n    },\n    highAmpliTemp: {\n        loading: false,\n        error: null,\n        data: {},\n        startDate: 0,\n        endDate: 0,\n    }\n};\n\n\nfunction areaMonitoringReducer(state = initialstate, action) {\n    switch (action.type) {\n        case FETCH_CURRENTTEMP_STARTED:\n            return {\n                ...state,\n                currentTemp: {\n                    loading: true,\n                    error: null,\n                    data: {}\n                }\n            }\n\n        case FETCH_CURRENTTEMP_SUCCESS:\n            return {\n                ...state,\n                currentTemp: {\n                    loading: false,\n                    error: null,\n                    data: {...action.payload.data}\n                }\n            }\n\n        case FETCH_CURRENTTEMP_FAILURE:\n            return {\n                ...state,\n                currentTemp: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                }\n            }\n\n        case FETCH_LASTLOWTEMPDAY_STARTED:\n            return {\n                ...state,\n                lastLowTemp: {\n                    loading: true,\n                    error: null,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        case FETCH_LASTLOWTEMPDAY_SUCCESS:\n            return {\n                ...state,\n                lastLowTemp: {\n                    loading: false,\n                    error: null,\n                    data: {...action.payload.data},\n                    startDate: state.lastLowTemp.startDate,\n                    endDate: state.lastLowTemp.endDate,\n                }\n            }\n\n        case FETCH_LASTLOWTEMPDAY_FAILURE:\n            return {\n                ...state,\n                lastLowTemp: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        case FETCH_FIRSTHIGHTEMPDAY_STARTED:\n            return {\n                ...state,\n                firstHighTemp: {\n                    loading: true,\n                    error: null,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        case FETCH_FIRSTHIGHTEMPDAY_SUCCESS:\n            return {\n                ...state,\n                firstHighTemp: {\n                    loading: false,\n                    error: null,\n                    data: {...action.payload.data},\n                    startDate: state.lastLowTemp.startDate,\n                    endDate: state.lastLowTemp.endDate,\n                }\n            }\n\n        case FETCH_FIRSTHIGHTEMPDAY_FAILURE:\n            return {\n                ...state,\n                firstHighTemp: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        case FETCH_HIGHAMPLITEMPDAY_STARTED:\n            return {\n                ...state,\n                highAmpliTemp: {\n                    loading: true,\n                    error: null,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        case FETCH_HIGHAMPLITEMPDAY_SUCCESS:\n            return {\n                ...state,\n                highAmpliTemp: {\n                    loading: false,\n                    error: null,\n                    data: {...action.payload.data},\n                    startDate: state.lastLowTemp.startDate,\n                    endDate: state.lastLowTemp.endDate,\n                }\n            }\n\n        case FETCH_HIGHAMPLITEMPDAY_FAILURE:\n            return {\n                ...state,\n                highAmpliTemp: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                    startDate: null,\n                    endDate: null,\n                }\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport default areaMonitoringReducer;\n","import React from \"react\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n        <h1>Welcome to Your Smart Home</h1>\n                <p>\n                    The objective of our Smart Home application is to develop a system that allows you to manage and monitoring personal comfort requirements and electric energy consumption. The system will gather information about temperature, rainfall and energy consumption.\n                </p>\n                <p>\n                    All the devices of your house can be connected. Not just computers and smartphones, but everything: clocks, speakers, lights, doorbells, cameras, windows, window blinds, hot water heaters, appliances, cooking utensils... All of those devices can communicate, send you information, and take your commands. It's not science fiction; it's the Internet of Things (IoT), and it's a key component of home automation and smart homes.\n                </p>\n                <div className=\"image\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/banner.jpg\")}\n                  />\n                </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import axios from 'axios';\n\nexport const FETCH_GEOAREAS_STARTED = 'FETCH_GEOAREAS_STARTED'\nexport const FETCH_GEOAREAS_SUCCESS = 'FETCH_GEOAREAS_SUCCESS'\nexport const FETCH_GEOAREAS_FAILURE = 'FETCH_GEOAREAS_FAILURE'\nexport const FETCH_GEOAREASTYPES_SUCCESS = 'FETCH_GEOAREASTYPES_SUCCESS'\nexport const ADD_EXT_SENSOR = 'ADD_EXT_SENSOR'\nexport const DELETE_EXT_SENSOR = 'DELETE_EXT_SENSOR'\n\naxios.defaults.headers.common['Authorization'] = JSON.parse(localStorage.getItem('token')); // for all requests\n\nexport function fetchGeoAreas() {\n  return dispatch => {\n    dispatch(fetchGeoAreasStarted());\n    axios\n      .get(`https://localhost:8443/geoareas`)\n      .then(res => {\n        dispatch(fetchGeoAreasSuccess(res.data._embedded.geographicalAreaDToes));\n      })\n      .catch(err => {\n        dispatch(fetchGeoAreasFailure(err.message));\n      });\n  };\n};\n\nexport function fetchGeoAreasStarted() {\n  return {\n    type: FETCH_GEOAREAS_STARTED,\n  }\n}\n\nexport function fetchGeoAreasSuccess(geoareas) {\n  return {\n    type: FETCH_GEOAREAS_SUCCESS,\n    payload: {\n      data:\n        [...geoareas]\n    }\n\n  }\n}\nexport function fetchGeoAreasFailure(message) {\n  return {\n    type: FETCH_GEOAREAS_FAILURE,\n    payload: {\n      error: message\n    }\n  }\n}\n\nexport const FETCH_GEOAREA_DETAILS_SUCCESS = 'FETCH_ROOM_DETAILS_SUCCESS'\nexport const FETCH_GEOAREA_DETAILS_FAILURE = 'FETCH_ROOM_DETAILS_FAILURE'\n\nexport const fetchGADetails = (id) => {\n  return dispatch => {\n    axios\n      .get(`https://localhost:8443/geoareas/${id}`)\n      .then(res => {\n        dispatch(fetchGADetailsSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchGADetailsFailure(err.message));\n      });\n  };\n};\n\n\nexport function fetchGADetailsSuccess(details) {\n  return {\n    type: FETCH_GEOAREA_DETAILS_SUCCESS,\n    payload: {\n      data: details\n    }\n\n  }\n}\nexport function fetchGADetailsFailure(message) {\n  return {\n    type: FETCH_GEOAREA_DETAILS_FAILURE,\n    payload: {\n      error: message\n    }\n  }\n}\n\nexport const ADD_GEOAREA = 'ADD_GEOAREA'\n\nexport const createGeoArea = ({ id, designation, gaType, latitude, longitude, altitude, length, width }) => {\n  return (dispatch) => {\n    return axios.post(`https://localhost:8443/geoareas`, {\n      identification: id,\n      designation: designation,\n      type: {\n        type: gaType\n      },\n      location: {\n        latitude: latitude,\n        longitude: longitude,\n        altitude: altitude\n      },\n      occupation: {\n        length: length,\n        width: width\n      }\n    })\n      .then(response => {\n        dispatch(createGeoAreaSuccess(response.data))\n        dispatch(fetchGeoAreas(response.data))\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport const createGeoAreaSuccess = (data) => {\n  return {\n    type: ADD_GEOAREA,\n    payload: {\n      id: data.id,\n      designation: data.designation,\n      type: data.type,\n      latitude: data.latitude,\n      longitude: data.longitude,\n      altitude: data.altitude,\n      length: data.length,\n      width: data.width\n\n    }\n  }\n};\n\n\nexport function fetchGeoAreaTypes() {\n  return dispatch => {\n    axios\n      .get(`https://localhost:8443/typeGAs`)\n      .then(res => {\n        dispatch(fetchGeoAreaTypesSuccess(res.data._embedded.typeGAs));\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport function fetchGeoAreaTypesSuccess(gaTypes) {\n  return {\n    type: FETCH_GEOAREASTYPES_SUCCESS,\n    payload: {\n      data: [...gaTypes]\n    }\n  }\n}\n\nexport const FETCH_GEOAREA_SENSORS_SUCCESS = 'FETCH_GEOAREA_SENSORS_SUCCESS'\nexport const FETCH_GEOAREA_SENSORS_FAILURE = 'FETCH_GEOAREA_SENSORS_FAILURE'\n\nexport const fetchGASensors = (id) => {\n  return dispatch => {\n    axios\n      .get(`https://localhost:8443/externalSensors/${id}/geoArea`)\n      .then(res => {\n        dispatch(fetchGASensorsSuccess(res.data._embedded.externalSensorDToes, id));\n      })\n      .catch(err => {\n        dispatch(fetchGASensorsFailure(err.message, id));\n      });\n  };\n};\n\nexport function fetchGASensorsSuccess(sensors, id) {\n  return {\n    type: FETCH_GEOAREA_SENSORS_SUCCESS,\n    payload: {\n      data: sensors,\n      gaId: id,\n    }\n  };\n}\n\nexport function fetchGASensorsFailure(message, id) {\n  return {\n    type: FETCH_GEOAREA_SENSORS_FAILURE,\n    payload: {\n      error: message,\n      gaId: id\n    }\n  }\n}\nexport const createSensor = ({ id, gaId, name, latitude, longitude, altitude, sensorTypeName, startDate, unit, active }) => {\n  return (dispatch) => {\n    return axios.post(`https://localhost:8443/externalSensors/`,\n      {\n        id: id,\n        locationDTO: {\n          latitude: latitude,\n          longitude: longitude,\n          altitude: altitude\n        },\n        sensorBehaviorDTO: {\n          name: name,\n          sensorType: {\n            type: sensorTypeName\n          },\n          startDate: startDate,\n          unit: unit,\n          active: true\n        },\n        idGA: gaId\n      }\n    )\n      .then(response => {\n        dispatch(createExtSensorSuccess(response.data))\n        dispatch(fetchGASensors(gaId))\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport const createExtSensorSuccess = (data) => {\n  return {\n    type: ADD_EXT_SENSOR,\n    payload: {\n      id: data.id,\n      roomId: data.roomID,\n      name: data.name,\n      sensorTypeName: data.sensorType,\n      startDate: data.startDate,\n      unit: 'C',\n      active: true,\n    }\n  }\n};\n\nexport const deleteSensor = (id,idGA) => {\n  return dispatch => {\n    axios\n      .delete(`https://localhost:8443/externalSensors/${id}`)\n      .then(res => {\n        dispatch(deleteSensorSuccess(res.data));\n        dispatch(fetchGASensors(idGA))\n      })\n      .catch(error => {\n        throw (error);\n      });\n  };\n};\n\nexport function deleteSensorSuccess() {\n  return {\n    type: DELETE_EXT_SENSOR,\n  }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createGeoArea } from 'actions/actionsGeoArea';\nimport {\n    Button,\n    Row,\n    Col,\n    Input,\n    CardBody,\n} from \"reactstrap\";\nimport { fetchGeoAreaTypes } from \"../../../actions/actionsGeoArea\";\nimport Card from \"reactstrap/es/Card\";\n\nclass CreateGeoArea extends React.Component {\n    state = {\n        id: '',\n        designation: '',\n        gaType: '',\n        latitude: undefined,\n        longitude: undefined,\n        altitude: undefined,\n        length: undefined,\n        width: undefined,\n    };\n\n    componentDidMount() {\n        this.props.onfetchGeoAreaTypes();\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddGeoArea(this.state)\n        this.handleReset();\n        this.props.onClose();\n    };\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            designation: '',\n            gaType: {\n                id: undefined,\n                type: ''\n            },\n            latitude: 0,\n            longitude: 0,\n            altitude: 0,\n            length: 0,\n            width: 0\n        })\n        this.props.onClose();\n    };\n\n    render() {\n        const gaTypes = this.props.gaTypes\n        return (\n            <div>\n                <Card>\n                    <CardBody>\n                        <h4>New Area</h4>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label>ID</label>\n                                    <input\n                                        placeholder=\"ex. PT\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"id\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.id}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Name</label>\n                                    <input\n                                        placeholder=\"ex. Portugal\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"designation\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.designation}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Type</label>\n                                    <div>\n                                        <select type=\"select\" name=\"gaType\" value={this.state.gaType}\n                                            onChange={this.handleInputChange}>\n                                            <option value=\"\" selected disabled hidden>Select Type</option>\n                                            {gaTypes.data.map(type =>\n                                                <option name=\"gaType\" value={type.type}>{type.type}</option>)};\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label>Latitude</label>\n                                    <input\n                                        placeholder=\"0\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"latitude\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.latitude}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Longitude</label>\n                                    <input\n                                        placeholder=\"0\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"longitude\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.longitude}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Altitude</label>\n                                    <input\n                                        placeholder=\"0\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"altitude\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.altitude}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label>Length</label>\n                                    <input\n                                        placeholder=\"0 m\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"length\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.length}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Width</label>\n                                    <input\n                                        placeholder=\"0 m\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"width\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.width}\n                                    />\n                                </div>\n                            </div>\n                            <Button color=\"success\" type=\"submit\">\n                                SAVE\n                            </Button>\n                            <Button color=\"danger\" onClick={this.handleReset}>\n                                CANCEL\n                            </Button>\n                        </form>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        gaTypes: {\n            data: state.geoareas.gaTypes.data,\n        },\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddGeoArea: geoArea => {\n            dispatch(createGeoArea(geoArea));\n        },\n        onfetchGeoAreaTypes: () => {\n            dispatch(fetchGeoAreaTypes())\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateGeoArea);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchGeoAreas, fetchGADetails,fetchGASensors } from 'actions/actionsGeoArea'\n\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\nclass GeoAreaTable extends React.Component {\n\n    componentDidMount() {\n        this.props.onfetchGeoAreas();\n    }\n\n    fetchGADetails = (id) => {\n        this.props.onfetchGADetails(id);\n        this.props.onShowDetails();\n    }\n    fetchGASensors = (id) => {\n        this.props.onfetchGASensors(id);\n        this.props.onShowSensors();\n    }\n\n    render() {\n        const data = this.props.geoareas.data;\n        const rows = data.map((row, index) => {\n            return (\n                <tr key={index}>\n                    <td>{row.identification} </td>\n                    <td>{row.designation}</td>\n                    <td onClick={() => this.fetchGADetails(row.identification)}><i className=\"nc-icon nc-zoom-split text-primary\" /> <b className=\"text-primary\">Details</b></td>\n                    <td onClick={() => this.fetchGASensors(row.identification)}><i className=\"nc-icon nc-touch-id text-danger\" /> <b className=\"text-danger\">Sensors</b></td>\n                </tr>\n            )\n        })\n        if (data.length === 0) {\n            return (\n                <p>No Areas Available</p>\n            )\n        } else {\n            return (\n                <div className=\"content\">\n                            <Card>\n                                <CardBody>\n                                    <Table>\n                                        <thead className=\"text-primary\">\n                                            <tr>\n                                                <th>ID</th>\n                                                <th>Name</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {rows}\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        geoareas: {\n            data: state.geoareas.geoareas.data\n        },\n        sensors: {\n            data: state.rooms.sensors.data,\n          },\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onfetchGeoAreas: () => {\n            dispatch(fetchGeoAreas())\n        },\n        onfetchGADetails: (id) => {\n            dispatch(fetchGADetails(id))\n        },\n        onfetchGASensors: (id) => {\n            dispatch(fetchGASensors(id))\n          }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GeoAreaTable);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass GADetailList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHidden: true,\n            isInEditMode: false\n        }\n    }\n\n    changeEditMode = () => {\n        this.setState({\n            isInEditMode: !this.state.isInEditMode\n        })\n    }\n\n    toggleHiddenRooms() {\n        this.setState({\n            isHidden: !this.state.isHidden\n        })\n    }\n\n    renderDefaultView = () => {\n        const {loading, error, data} = this.props.details;\n        if (loading === true) {\n            return (<h1>Loading ....</h1>);\n        } else {\n            if (error !== null) {\n                return (<h1>Error ....</h1>);\n            } else {\n                if (data.identification) {\n                    return (\n                        <div>\n\n                            <Card>\n                                <CardBody>\n                                    <CardTitle>\n                                        <h6>Geographical Area of {data.identification}</h6>\n                                    </CardTitle>\n                                    <Table>\n                                        <tr>\n                                            <td>Type:</td>\n                                            <td>{data.type.type}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Location:</td>\n                                            <td>{data.location.latitude}, {data.location.longitude}, {data.location.altitude}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Occupation Area:</td>\n                                            <td>{data.occupation.length}m x {data.occupation.width}m\n                                            </td>\n                                        </tr>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    );\n                } else {\n                    return null;\n                }\n            }\n        }\n    }\n\n    render() {\n        return this.state.isInEditMode ?\n            this.renderEditView() :\n            this.renderDefaultView()\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        details: {\n            loading: state.geoareas.details.loading,\n            data: state.geoareas.details.data,\n            error: state.geoareas.details.error,\n            id: state.geoareas.details.id,\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(GADetailList);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchSensorTypes} from 'actions/actionsRoom';\nimport {createSensor} from 'actions/actionsGeoArea';\nimport {\n    Button,\n    Card,\n    CardTitle,\n    CardBody,\n} from \"reactstrap\";\n\n\nclass CreateNewIntSensor extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        id: '',\n        gaId: this.props.gaId,\n        name: '',\n        sensorTypeName: '',\n        startDate: '',\n        unit: '',\n        active: true,\n        latitude: null,\n        longitude: null,\n        altitude: null,\n    }\n\n    componentDidMount() {\n        this.props.onfetchStypes();\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onCreateSensor(this.state);\n        this.handleReset();\n        this.props.onClose();\n    }\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            roomId: '',\n            sensorBehavior: {\n                name: '',\n                sensorType: {\n                    id: undefined,\n                    type: ''\n                },\n                startDate: '',\n                unit: '',\n                active: true\n            }\n        })\n        this.props.onClose();\n\n    }\n\n    render() {\n        const sTypes = this.props.sTypes\n        return (\n            <div className=\"side-card\">\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            <h6>New Sensor on {this.state.gaId}</h6>\n                        </CardTitle>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label>ID</label>\n                                    <input\n                                        placeholder=\"ex. RS4\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"id\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.id}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Designation</label>\n                                    <input\n                                        placeholder=\"ex. RainSensor4\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.name}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group\">\n                                    <label>Type</label>\n                                    <div>\n                                        <select type=\"select\" name=\"sensorTypeName\" value={this.state.sensorTypeName}\n                                                onChange={this.handleInputChange}>\n                                            <option value=\"\" selected disabled hidden>Select Type</option>\n                                            {sTypes.data.map(type =>\n                                                <option name=\"sensorTypeName\" value={type.type.name}>{type.type.name}</option>)};\n                                        </select>\n                                    </div>\n                            </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Unit</label>\n                                    <input\n                                        placeholder=\"ex. mm/h\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"unit\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.unit}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Start Date</label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.startDate}>\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label>Latitude</label>\n                                    <input\n                                        placeholder=\"0\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"latitude\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.latitude}\n                                    />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label>Longitude</label>\n                                    <input\n                                        placeholder=\"0\"\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"longitude\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.longitude}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n\n                            </div>\n<div>\n                                <Button color=\"primary\" onClick={this.handleSubmit}>\n                                    SAVE\n                                </Button>\n                                <Button color=\"danger\" onClick={this.handleReset}>\n                                    CANCEL\n                                </Button>\n</div>\n                        </form>\n                    </CardBody>\n                </Card>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sTypes: {\n            data: state.rooms.sTypes.data,\n        },\n        gaId: state.geoareas.sensors.gaId,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateSensor: sensor => {\n            dispatch(createSensor(sensor));\n        },\n        onfetchStypes: () => {\n            dispatch(fetchSensorTypes())\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateNewIntSensor);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CreateNewExtSensor from \"./CreateNewExtSensor\";\nimport {deleteSensor} from 'actions/actionsGeoArea';\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col,\n    Button,\n\n} from \"reactstrap\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass GASensors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isInEditMode: false,\n    }\n  }\n\n  deleteSensor = (id,idGA) => {\n    this.props.onDeleteSensor(id,idGA);\n  }\n\n  changeEditMode = () => {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    })\n  }\n\n  renderEditView = () => {\n    return <CreateNewExtSensor gaId={this.props.sensors.gaId} onClose={this.changeEditMode} />\n  }\n\n    renderDefaultView() {\n        const {data, error} = this.props.sensors\n        const rows = data.map((row, index) => {\n            var startDate = (row.sensorBehaviorDTO.startDate).slice(0, 10);\n            return (\n                <tr key={index}>\n                    <td>{row.id}</td>\n                    <td>{row.sensorBehaviorDTO.name}</td>\n                    <td>{row.sensorBehaviorDTO.sensorType.type}</td>\n                    <td>{startDate}</td>\n                        <tr><Button color=\"danger\" onClick={() => this.deleteSensor(row.id,row.idGA)}>\n                            DELETE\n                        </Button></tr>\n\n                </tr>\n            )\n        })\n        if (error === null) {\n            return (\n                <div>\n                    <Card>\n                        <CardBody>\n                            <CardTitle>\n                                <h6>Sensors on {this.props.sensors.gaId}</h6>\n                            </CardTitle>\n                            <Table>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Start date</th>\n                                </tr>\n                                </thead>\n                                <tbody>{rows}</tbody>\n                            </Table>\n                            <Button color=\"default\" onClick={this.changeEditMode}>\n                                <i className=\"nc-icon nc-simple-add\"></i>\n                            </Button>\n                        </CardBody>\n                    </Card>\n                </div>\n            );\n        } else return <Card>\n            <CardBody>\n                <h5>No sensors available</h5>\n                <td>\n                    <Button color=\"default\" onClick={this.changeEditMode}>\n                        <i className=\"nc-icon nc-simple-add\"></i>\n                    </Button>\n                </td>\n            </CardBody>\n        </Card>\n    }\n\n  render() {\n    return this.state.isInEditMode ?\n      this.renderEditView() :\n      this.renderDefaultView()\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensors: {\n      data: state.geoareas.sensors.data,\n      error: state.geoareas.sensors.error,\n      gaId: state.geoareas.sensors.gaId\n    },\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onDeleteSensor: (id,idGA) => {\n          dispatch(deleteSensor(id,idGA))\n      },\n  }\n}\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GASensors);\n","import React from \"react\";\nimport CreateGeoArea from \"components/project/GeoAreaComponents/CreateGeoArea\";\nimport GeoAreaTable from \"components/project/GeoAreaComponents/GeoAreaTable\";\nimport GADetailList from \"components/project/GeoAreaComponents/GADetailList\";\nimport GASensors from \"components/project/GeoAreaComponents/GASensors.jsx\";\n\n\nimport {\n    Card,\n    Row,\n    Col,\n    Button,\n    Table,\n\n} from \"reactstrap\";\n\nclass HouseArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHiddenCreate: true,\n            showDetails: false,\n            showSensors: false,\n        }\n    }\n\n    toggleHidden() {\n        this.setState({\n            isHiddenCreate: !this.state.isHiddenCreate\n        })\n    }\n\n    showDetails() {\n        this.setState({\n            showDetails: true,\n            showSensors: false,\n        })\n    }\n\n    showSensors() {\n        this.setState({\n            showSensors: true,\n            showDetails: false\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Button onClick={this.toggleHidden.bind(this)}>\n                    <i className=\"nc-icon nc-simple-add\"></i>\n                </Button>\n                <div>\n                    {!this.state.isHiddenCreate && <CreateGeoArea onClose={this.toggleHidden.bind(this)}/>}\n                </div>\n                <Table>\n                    <Row>\n                        <Col md=\"8\">\n                            {this.state.isHiddenCreate && this.state.showDetails && <GADetailList/>}\n                            {this.state.isHiddenCreate && this.state.showSensors && <GASensors/>}\n                        </Col>\n                        <Col md=\"6\">\n                            <td>{this.state.isHiddenCreate && <GeoAreaTable onShowDetails={this.showDetails.bind(this)}\n                                                                            onShowSensors={this.showSensors.bind(this)}/>}</td>\n                        </Col>\n                    </Row>\n                </Table>\n\n            </div>\n        );\n    }\n}\n\nexport default HouseArea;\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchRooms, fetchRoomDetails, fetchRoomSensors } from 'actions/actionsRoom';\n\nimport {\n  Card,\n  CardBody,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass RoomTable extends React.Component {\n\n  componentDidMount() {\n    this.props.onfetchRooms();\n  }\n\n  fetchRoomDetails = (id) => {\n    this.props.onfetchRoomDetails(id);\n    this.props.onShowDetails();\n  }\n  fetchRoomSensors = (id) => {\n    this.props.onfetchRoomSensors(id);\n    this.props.onShowSensors();\n  }\n\n\n  render() {\n    const data = this.props.rooms.data;\n    const rows = data.map((row, index) => {\n      return (\n        <tr key={index}>\n          <td>{row.id} </td>\n          <td>{row.description}</td>\n          <td onClick={() => this.fetchRoomDetails(row.id)}><i className=\"nc-icon nc-zoom-split text-primary\" /> <b className=\"text-primary\">Details</b></td>\n          <td onClick={() => this.fetchRoomSensors(row.id)}><i className=\"nc-icon nc-touch-id text-danger\" /> <b className=\"text-danger\">Sensors</b></td>\n        </tr>\n        )\n    })\n    if (data.length === 0) {\n      return (\n        <p>No Rooms Available</p>\n      )\n    }\n    else {\n      return (\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardBody>\n                  <Table>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>ID</th>\n                        <th>Designation</th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    rooms: {\n      data: state.rooms.rooms.data,\n    },\n    sensors: {\n      data: state.rooms.sensors.data,\n    }\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onfetchRooms: () => {\n      dispatch(fetchRooms())\n    },\n    onfetchRoomDetails: (id) => {\n      dispatch(fetchRoomDetails(id))\n    },\n    onfetchRoomSensors: (id) => {\n      dispatch(fetchRoomSensors(id))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoomTable);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createRoom} from 'actions/actionsRoom';\nimport NotificationAlert from \"react-notification-alert\";\nimport {\n    Button,\n} from \"reactstrap\";\nimport Card from \"reactstrap/es/Card\";\nimport CardBody from \"reactstrap/es/CardBody\";\n\nvar options = {};\noptions = {\n    place: 'tl',\n    message: (\n        <div>Room Created with success.</div>\n    ),\n    type: \"success\",\n    icon: \"now-ui-icons ui-1_bell-53\",\n    autoDismiss: 7\n}\n\nclass CreateRoom extends React.Component {\n    state = {\n        id: '',\n        description: '',\n        floor: '',\n        length: '',\n        width: '',\n        height: ''\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddRoom(this.state)\n        this.refs.notify.notificationAlert(options);\n        this.handleReset();\n        this.props.onClose();\n    };\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            description: '',\n            floor: '',\n            length: '',\n            width: '',\n            height: ''\n        })\n        this.props.onClose();\n    };\n\n    render() {\n        return (\n            <div>\n                <NotificationAlert ref=\"notify\"/>\n                <Card>\n                    <CardBody>\n                    <h4>New Room</h4>\n                    <form onSubmit={this.handleSubmit}>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                                <label>ID</label>\n                                <input\n                                    placeholder=\"ex. LR1\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"id\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.id}\n                                />\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label>Description</label>\n                                <input\n                                    placeholder=\"ex. Living Room\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"description\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.description}>\n                                </input>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label>Floor</label>\n                                <input\n                                    placeholder=\"0\"\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"floor\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.floor}>\n                                </input>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <label>Length</label>\n                                <input\n                                    placeholder=\"0 m\"\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"length\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.length}>\n                                </input>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label>Width</label>\n                                <input\n                                    placeholder=\"0 m\"\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"width\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.width}>\n                                </input>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label>Height</label>\n                                <input\n                                    placeholder=\"0 m\"\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"height\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.height}>\n                                </input>\n                            </div>\n                        </div>\n\n                        <div>\n                            <Button className=\"btn btn-success\" color=\"primary\" type=\"submit\">\n                                SAVE\n                            </Button>\n                            <Button color=\"danger\" onClick={this.handleReset}>\n                                CANCEL\n                            </Button>\n                        </div>\n\n                    </form>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddRoom: room => {\n            dispatch(createRoom(room));\n        }\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CreateRoom);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {updateRoom} from 'actions/actionsRoom';\nimport Button from \"reactstrap/es/Button\";\nimport {Card, CardBody, Col, Row, Table} from \"reactstrap\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass UpdateRoom extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        id: this.props.details.data.id,\n        description: this.props.details.data.description,\n        floor: this.props.details.data.floor,\n        length: this.props.details.data.length,\n        width: this.props.details.data.width,\n        height: this.props.details.data.height\n    };\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onEditRoom(this.state);\n        this.handleReset();\n        this.props.onClose();\n    }\n\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            description: '',\n            floor: 0,\n            length: 0,\n            width: 0,\n            height: 0\n        });\n        this.props.onClose();\n    };\n\n    render() {\n        return (\n            <div>\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            <h6>ROOM {this.state.id}</h6>\n                        </CardTitle>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Description</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"description\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.description}>\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Floor</label>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"floor\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.floor}>\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Length</label>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"length\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.length}>\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Width</label>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"width\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.width}>\n                                    </input>\n                                </div>\n                            </div>\n\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Height</label>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"width\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.height}>\n                                    </input>\n                                </div>\n                            </div>\n                            <div>\n                                <Button type=\"button\" className=\"btn btn-info\"\n                                        onClick={this.handleSubmit}>UPDATE</Button>\n                                <Button type=\"button\" className=\"btn btn-danger\"\n                                        onClick={this.handleReset}>CANCEL</Button>\n\n                            </div>\n                        </form>\n                    </CardBody>\n                </Card>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        details: {\n            loading: state.rooms.details.loading,\n            data: state.rooms.details.data,\n            error: state.rooms.details.error,\n            id: state.rooms.details.id,\n        }\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onEditRoom: room => {\n            dispatch(updateRoom(room));\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateRoom);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UpdateRoom from \"./UpdateRoom\";\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Button,\n    Col\n} from \"reactstrap\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass RoomDetailList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHidden: true,\n            isInEditMode: false\n        }\n    }\n\n    changeEditMode = () => {\n        this.setState({\n            isInEditMode: !this.state.isInEditMode\n        })\n    }\n\n    renderEditView = () => {\n        return <UpdateRoom onClose={this.changeEditMode}/>\n    }\n\n    renderDefaultView = () => {\n        const {loading, error, data} = this.props.details;\n        if (loading === true) {\n            return (<h1>Loading ....</h1>);\n        } else {\n            if (error !== null) {\n                return (<h1>Error ....</h1>);\n            } else {\n                if (data.id) {\n                    return (\n                        <div>\n                            <Card>\n                                <CardBody>\n                                    <CardTitle>\n                                        <h6>ROOM {data.id}</h6>\n                                    </CardTitle>\n                                    <Table>\n                                        <tr>\n                                            <td>Description:</td>\n                                            <td>{data.description}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Floor:</td>\n                                            <td>{data.floor}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Length:</td>\n                                            <td>{data.length} m</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Width:</td>\n                                            <td>{data.width} m</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Height:</td>\n                                            <td>{data.height} m</td>\n                                        </tr>\n                                        <tr>\n                                        </tr>\n                                    </Table>\n                                    <Button type=\"button\" className=\"btn btn-primary\"\n                                            onClick={this.changeEditMode}>\n                                        EDIT\n                                    </Button>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    );\n                } else {\n                    return null;\n                }\n            }\n        }\n    }\n\n    render() {\n        return this.state.isInEditMode ?\n            this.renderEditView() :\n            this.renderDefaultView()\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        details: {\n            loading: state.rooms.details.loading,\n            data: state.rooms.details.data,\n            error: state.rooms.details.error,\n            id: state.rooms.details.id,\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(RoomDetailList);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {createSensor, fetchSensorTypes} from 'actions/actionsRoom';\nimport {\n    Button,\n    Card,\n} from \"reactstrap\";\nimport CardBody from \"reactstrap/es/CardBody\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass CreateNewIntSensor extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        id: '',\n        roomId: this.props.roomId,\n        name: '',\n        sensorTypeName: '',\n        startDate: '',\n        unit: '',\n        active: true,\n    }\n\n    componentDidMount() {\n        this.props.onfetchStypes();\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onCreateSensor(this.state);\n        this.handleReset();\n        this.props.onClose();\n    }\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            roomId: '',\n            sensorBehavior: {\n                name: '',\n                sensorType: {\n                    id: undefined,\n                    type: ''\n                },\n                startDate: '',\n                unit: '',\n                active: true\n            }\n        })\n        this.props.onClose();\n\n    }\n\n    render() {\n        const sTypes = this.props.sTypes\n        return (\n            <div>\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            <h6>New Sensor on {this.state.roomId}</h6>\n                        </CardTitle>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>ID</label>\n                                    <input\n                                        placeholder=\"ex. TS10\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"id\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.id}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Designation</label>\n                                    <input\n                                        placeholder=\"ex. TemperatureSensor\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.name}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Type</label>\n                                    <div>\n                                        <select type=\"select\" name=\"sensorTypeName\" value={this.state.sensorTypeName}\n                                                onChange={this.handleInputChange}>\n                                            <option value=\"\" selected disabled hidden>Select Type</option>\n                                            {sTypes.data.map(type =>\n                                                <option name=\"sensorTypeName\"\n                                                        value={type.type.name}>{type.type.name}</option>)};\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Start Date</label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"startDate\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.startDate}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-12\">\n                                    <label>Unit</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"unit\"\n                                        onChange={this.handleInputChange}\n                                        value={this.state.unit}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Button color=\"success\" onClick={this.handleSubmit}>SAVE</Button>\n                                <Button color=\"danger\" onClick={this.handleReset}>CANCEL</Button>\n                            </div>\n                        </form>\n                    </CardBody>\n                </Card>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sTypes: {\n            data: state.rooms.sTypes.data,\n        },\n        roomId: state.rooms.sensors.roomId,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateSensor: sensor => {\n            dispatch(createSensor(sensor));\n        },\n        onfetchStypes: () => {\n            dispatch(fetchSensorTypes())\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateNewIntSensor);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CreateNewIntSensor from \"./CreateNewIntSensor\";\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col,\n    Button,\n} from \"reactstrap\";\nimport CardTitle from \"reactstrap/es/CardTitle\";\n\nclass RoomSensors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInEditMode: false,\n        }\n    }\n\n    changeEditMode = () => {\n        this.setState({\n            isInEditMode: !this.state.isInEditMode\n        })\n    }\n\n    renderEditView = () => {\n        return <CreateNewIntSensor roomId={this.props.sensors.roomId} onClose={this.changeEditMode}/>\n    }\n\n    renderDefaultView() {\n        const {data, error} = this.props.sensors\n        const rows = data.map((row, index) => {\n            var startDate = (row.sensorBehavior.startDate).slice(0, 10);\n            return (\n                <tr key={index}>\n                    <td>{row.id}</td>\n                    <td>{row.sensorBehavior.name}</td>\n                    <td>{row.sensorBehavior.sensorType.type}</td>\n                    <td>{startDate}</td>\n                </tr>\n            )\n        })\n        if (error === null) {\n            return (\n                <div>\n                    <Card>\n                        <CardBody className=\"side-card\">\n                            <CardTitle>\n                                <h6> Sensors on Room {this.props.sensors.roomId}</h6>\n                            </CardTitle>\n                            <Table>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Name</th>\n                                    <th>Sensor Type</th>\n                                    <th>Start date</th>\n                                </tr>\n                                </thead>\n\n                                <tbody>{rows}</tbody>\n                            </Table>\n                            <Button color=\"default\" onClick={this.changeEditMode}>\n                                <i className=\"nc-icon nc-simple-add\"></i>\n                            </Button>\n                        </CardBody>\n                    </Card>\n                </div>\n            );\n        } else return <Card>\n            <CardBody>\n                <h5>No sensors available</h5>\n                <Button color=\"default\" onClick={this.changeEditMode}>\n                    <i className=\"nc-icon nc-simple-add\"></i>\n                </Button>\n            </CardBody>\n        </Card>\n    }\n\n    render() {\n        return this.state.isInEditMode ?\n            this.renderEditView() :\n            this.renderDefaultView()\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sensors: {\n            data: state.rooms.sensors.data,\n            error: state.rooms.sensors.error,\n            roomId: state.rooms.sensors.roomId\n        },\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(RoomSensors);\n","import React from \"react\";\nimport RoomTable from \"components/project/RoomComponents/RoomTable.jsx\";\nimport CreateRoom from \"components/project/RoomComponents/CreateRoom\";\nimport RoomDetailList from \"components/project/RoomComponents/RoomDetailList.jsx\";\nimport RoomSensors from \"components/project/RoomComponents/RoomSensors.jsx\";\n\nimport {\n    Button,\n    CardHeader,\n    CardTitle,\n    Table,\n    Row,\n    Col\n\n} from \"reactstrap\";\n\nclass Room extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHiddenCreate: true,\n            showDetails: false,\n            showSensors: false,\n        }\n    }\n\n    toggleHiddenRooms() {\n        this.setState({\n            isHiddenCreate: !this.state.isHiddenCreate\n        })\n    }\n\n    showDetails() {\n        this.setState({\n            showDetails: true,\n            showSensors: false,\n        })\n    }\n\n    showSensors() {\n        this.setState({\n            showSensors: true,\n            showDetails: false\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n\n                <Button onClick={this.toggleHiddenRooms.bind(this)}>\n                    <i className=\"nc-icon nc-simple-add\"></i>\n                </Button>\n                <Table>\n                    <Row>\n                        <Col md=\"6\">\n\n                            <td>{this.state.isHiddenCreate && <RoomTable onShowDetails={this.showDetails.bind(this)}\n                                                                         onShowSensors={this.showSensors.bind(this)}/>}</td>\n                        </Col>\n                        <Col md=\"6\">\n                            <td>{this.state.isHiddenCreate && this.state.showDetails && <RoomDetailList/>}</td>\n                            <td>{this.state.isHiddenCreate && this.state.showSensors && <RoomSensors/>}</td>\n                        </Col>\n                    </Row>\n                </Table>\n                <div>\n                {!this.state.isHiddenCreate && <CreateRoom onClose={this.toggleHiddenRooms.bind(this)}/>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Room;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createHouseGrid } from 'actions/actionsGrid';\nimport {\n    Button,\n    Card\n\n} from \"reactstrap\";\nimport CardBody from \"reactstrap/es/CardBody\";\n\nclass CreateGrid extends React.Component {\n    state = {\n        id: undefined,\n        designation: '',\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddGrid(this.state)\n        this.handleReset();\n        this.props.onClose();\n    };\n\n    handleReset = () => {\n        this.setState({\n            id: '',\n            description: '',\n\n        })\n        this.props.onClose();\n    };\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Card>\n                    <CardBody>\n                <h2>New House Grid</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group col-md-6\">\n                        <label>ID</label>\n                        <input\n                            placeholder=\"ex. PG1\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"id\"\n                            onChange={this.handleInputChange}\n                            value={this.state.id}\n                        />\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Description</label>\n                        <input\n                            placeholder=\"ex. PowerGrid1\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"designation\"\n                            onChange={this.handleInputChange}\n                            value={this.state.designation}>\n                        </input>\n                    </div>\n                    <div className=\"buttons\">\n                        <Button  color=\"success\"\n                            type=\"submit\"\n                        >\n                            SAVE\n                        </Button>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.handleReset}>\n                            CANCEL\n                        </button>\n                    </div>\n                </form>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddGrid: grid => {\n            dispatch(createHouseGrid(grid));\n        }\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CreateGrid);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchHouseGrids, fetchHouseGridRooms} from 'actions/actionsGrid';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass GridTable extends React.Component {\n\n  componentDidMount() {\n    this.props.onfetchHouseGrids();\n  }\n\n  fetchHouseGridRooms = (id) => {\n    this.props.onfetchHouseGridRooms(id);\n    this.props.onShowRooms();\n  }\n\n  render() {\n    const data = this.props.houseGrids.data\n    const rows = data.map((row, index) => {\n      return (\n        <tr key={index}>\n          <td>{row.id} </td>\n          <td>{row.designation}</td>\n          <td onClick={() => this.fetchHouseGridRooms(row.id)}><i className=\"nc-icon nc-zoom-split text-primary\" /> <b className=\"text-primary\">Details</b></td>\n\n        </tr>)\n    })\n    if (data.length === 0) {\n      return (\n        <p>No Grids Available</p>\n      )\n    }\n    else {\n      return (\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardBody>\n                  <Table>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>ID</th>\n                        <th>Designation</th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    houseGrids: {\n      data: state.grids.houseGrids.data,\n    },\n    houseGridRooms:{\n      data: state.grids.houseGridRooms.data,\n    }\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onfetchHouseGrids: () => {\n      dispatch(fetchHouseGrids())\n    },\n    onfetchHouseGridRooms: (id) => {\n      dispatch(fetchHouseGridRooms(id))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GridTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\nclass GridRooms extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHidden: true,\n            isInEditMode: false\n        }\n    }\n\n    toggleHiddenRooms() {\n        this.setState({\n            isHidden: !this.state.isHidden\n        })\n    }\n\nrender(){\n    const data  = this.props.houseGridRooms.data\n    const rows = data.map((row) => {\n        return (\n            <table>\n                <tbody>\n                    <tr> {row}</tr>\n                </tbody>\n            </table>\n        )\n    })\n    if (data.length>0) {\n        return (\n            <div className=\"content\">\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <Table>\n                                    <thead className=\"text-primary\">\n                                        <tr>\n                                            <th>Rooms on grid</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>{rows}</tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    } else {\n        return <p>No rooms on that house grid</p>\n    }\n}\n}\nconst mapStateToProps = (state) => {\n    return {\n        houseGridRooms: {\n            data: state.grids.houseGridRooms.data\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(GridRooms);","import React from \"react\";\nimport CreateGrid from \"components/project/GridComponents/CreateGrid\";\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col, Button\n} from \"reactstrap\";\nimport GridTable from \"../components/project/GridComponents/GridTable\";\nimport GridRooms from \"../components/project/GridComponents/GridRooms\";\n\nclass HouseGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHidden: true,\n      showRooms: false,\n    }\n  }\n  showRooms() {\n    this.setState({\n      showRooms: true,\n    })}\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden\n    })\n  }\n  render() {\n    return (\n        <div className=\"content\">\n          <Button onClick={this.toggleHidden.bind(this)}>\n            <i className=\"nc-icon nc-simple-add\"></i>\n          </Button>\n          <div>\n          {!this.state.isHidden && <CreateGrid onClose={this.toggleHidden.bind(this)} />}\n          </div>\n          <Table>\n            <Row>\n              <Col md=\"8\">\n          <tr>\n            <td>{this.state.isHidden && <GridTable onShowRooms={this.showRooms.bind(this)} />}</td>\n            <td>{this.state.isHidden && this.state.showRooms && <GridRooms />}</td>\n          </tr>\n              </Col>\n            </Row>\n          </Table>\n        </div>\n    );\n  }\n}\n\nexport default HouseGrid;\n","import React from 'react'\nimport {fetchCurrentTemp} from \"../../../../actions/actionsArea\";\nimport {connect} from \"react-redux\";\n\nclass AreaCurrentTemp extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.onGetCurrentTemp();\n    }\n\n    render() {\n        const {loading, error, data} = this.props.currentTemp;\n        let moment = require('moment/moment');\n        moment().format();\n\n        if (loading === true) {\n            return (<p>Loading ....</p>);\n        } else {\n            if (error !== null) {\n                return (<p>Error ....</p>);\n            } else {\n                if (data.readingValue && data.readingDateAndTime) {\n                    return (\n                        <div>\n                            <p>The Current Temperature is:</p>\n\n                            <p>{data.readingValue}ºC</p>\n                            <p>{moment(data.readingDateAndTime).format('DD-MM-YYYY')}</p>\n\n                        </div>\n                    )\n                } else {\n                    return <h1>no reading value</h1>\n                }\n            }\n        }\n\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentTemp: {\n            loading: state.currentTemp.currentTemp.loading,\n            data: state.currentTemp.currentTemp.data,\n            error: state.currentTemp.currentTemp.error,\n        }\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetCurrentTemp: () => {\n            dispatch(fetchCurrentTemp());\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AreaCurrentTemp);","import React from 'react'\nimport Calendar from 'react-calendar';\nimport {fetchLastLowTempDay} from \"../../../../actions/actionsArea\";\nimport {connect} from \"react-redux\";\n\nclass AreaLastLowTemp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstDate: undefined,\n            secondDate: undefined,\n            showResult: false,\n        }\n\n        this.changeFirstDate = this.changeFirstDate.bind(this)\n        this.changeSecondDate = this.changeSecondDate.bind(this)\n        this.getResult = this.getResult.bind(this)\n    }\n\n    getResult() {\n        this.setState({\n            showResult: !this.state.showResult\n        })\n        let moment = require('moment/moment')\n        moment().format();\n        const startDate = moment(this.state.firstDate).format('YYYYMMDD');\n        const endDate = moment(this.state.secondDate).format('YYYYMMDD');\n        this.props.onGetTemperature(startDate, endDate);\n    }\n\n\n    changeFirstDate = chosenDate => {\n        this.setState({\n            firstDate: chosenDate\n            /*[e.target.name]: e.target.value*/\n        })\n\n    };\n\n    changeSecondDate = chosenDate => {\n        this.setState({\n            secondDate: chosenDate\n            /*[e.target.name]: e.target.value*/\n        })\n\n    };\n\n    render() {\n        const {loading, error, data, startDate, endDate} = this.props.lastLowTemp;\n        let moment = require('moment/moment')\n        moment().format();\n\n        /* if (loading === true) {\n             return (<h1>Loading ....</h1>);\n         } else {\n             if (error !== null) {\n                 return (<h1>Error ....</h1>);\n             } else {*/\n        /*if (data.readingValue && data.dateAndTime) {*/\n        return (\n            <div>\n                <p>Last Lowest Temperature</p>\n                <table>\n\n                    <td>\n                        <p>Pick a start date:</p>\n                        <Calendar\n                            onChange={this.changeFirstDate}\n                            value={this.state.firstDate}\n                        />\n\n                    </td>\n                    <td>\n                        <p>Pick an end date:</p>\n                        <Calendar\n                            onChange={this.changeSecondDate}\n                            value={this.state.secondDate}\n                        />\n\n                    </td>\n                </table>\n                <button onClick={this.getResult.bind(this)}>Go!</button>\n                <tr>{this.state.showResult &&\n                <td> the day with the last lowest maximum temperature, between the selected dates,\n                    <tr>happened in:  {moment(data.readingDateAndTime).format('DD-MM-YYYY')}</tr>\n                    <tr>with a value of:  {data.readingValue} ºC</tr>\n                </td>}\n                </tr>\n\n            </div>\n        )\n\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        lastLowTemp: {\n            loading: state.currentTemp.lastLowTemp.loading,\n            data: state.currentTemp.lastLowTemp.data,\n            error: state.currentTemp.lastLowTemp.error,\n            startDate: state.currentTemp.lastLowTemp.startDate,\n            endDate: state.currentTemp.lastLowTemp.endDate,\n        }\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetTemperature: (startDate, endDate) => {\n            dispatch(fetchLastLowTempDay(startDate, endDate));\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AreaLastLowTemp);\n\n/*\n\nnpm install\nnpm install redux\nnpm install react-redux\nnpm install react-thunk\nnpm install axios\nnpm install react-router-dom\nnpm install redux-thunk\nnpm install @material-ui/core\nnpm install @material-ui/icons\nnpm install typeface-roboto --save\nnpm install moment\nnpm install react-calendar\nnpm start\n*/","import React from 'react'\nimport Calendar from 'react-calendar';\nimport {fetchFirstHighTempDay} from \"../../../../actions/actionsArea\";\nimport {connect} from \"react-redux\";\n\nclass AreaFirstHighTemp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstDate: undefined,\n            secondDate: undefined,\n            showResult: false,\n        }\n\n        this.changeFirstDate = this.changeFirstDate.bind(this)\n        this.changeSecondDate = this.changeSecondDate.bind(this)\n        this.getResult = this.getResult.bind(this)\n    }\n\n    getResult() {\n        this.setState({\n            showResult: !this.state.showResult\n        })\n        let moment = require('moment/moment')\n        moment().format();\n        const startDate = moment(this.state.firstDate).format('YYYYMMDD');\n        const endDate = moment(this.state.secondDate).format('YYYYMMDD');\n        this.props.onGetTemperature(startDate, endDate);\n    }\n\n\n    changeFirstDate = chosenDate => {\n        this.setState({\n            firstDate: chosenDate\n        })\n\n    };\n\n    changeSecondDate = chosenDate => {\n        this.setState({\n            secondDate: chosenDate\n        })\n\n    };\n\n    render() {\n        const {loading, error, data, startDate, endDate} = this.props.firstHighTemp;\n        let moment = require('moment/moment')\n        moment().format();\n\n        /* if (loading === true) {\n             return (<h1>Loading ....</h1>);\n         } else {\n             if (error !== null) {\n                 return (<h1>Error ....</h1>);\n             } else {*/\n        /*if (data.readingValue && data.dateAndTime) {*/\n        return (\n            <div>\n                <p>First Highest Temperature</p>\n                <table>\n                    <td>\n                        <p>Pick a start date:</p>\n                        <Calendar\n                            onChange={this.changeFirstDate}\n                            value={this.state.firstDate}\n                        />\n\n                    </td>\n                    <td>\n                        <p>Pick an end date:</p>\n                        <Calendar\n                            onChange={this.changeSecondDate}\n                            value={this.state.secondDate}\n                        />\n\n                    </td>\n                </table>\n                <button onClick={this.getResult.bind(this)}>Go!</button>\n                <tr>{this.state.showResult &&\n                <td> the day with the first highest maximum temperature, between the selected dates,\n                    <tr>happened in: {moment(data.readingDateAndTime).format('DD-MM-YYYY')}</tr>\n                    <tr>with a value of:  {data.readingValue} ºC</tr>\n                </td>}\n                </tr>\n            </div>\n        )\n\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        firstHighTemp: {\n            loading: state.currentTemp.firstHighTemp.loading,\n            data: state.currentTemp.firstHighTemp.data,\n            error: state.currentTemp.firstHighTemp.error,\n            startDate: state.currentTemp.firstHighTemp.startDate,\n            endDate: state.currentTemp.firstHighTemp.endDate,\n        }\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetTemperature: (startDate, endDate) => {\n            dispatch(fetchFirstHighTempDay(startDate, endDate));\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AreaFirstHighTemp);\n\n/*\n\nnpm install\nnpm install redux\nnpm install react-redux\nnpm install react-thunk\nnpm install axios\nnpm install react-router-dom\nnpm install redux-thunk\nnpm install @material-ui/core\nnpm install @material-ui/icons\nnpm install typeface-roboto --save\nnpm install moment\nnpm install react-calendar\nnpm start\n*/","import React from 'react'\nimport Calendar from 'react-calendar';\nimport {fetchHighAmpliTempDay} from \"../../../../actions/actionsArea\";\nimport {connect} from \"react-redux\";\n\nclass AreaHighAmpliTemp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstDate: undefined,\n            secondDate: undefined,\n            showResult: false,\n        }\n\n        this.changeFirstDate = this.changeFirstDate.bind(this)\n        this.changeSecondDate = this.changeSecondDate.bind(this)\n        this.getResult = this.getResult.bind(this)\n    }\n\n    getResult() {\n        this.setState({\n            showResult: !this.state.showResult\n        })\n        let moment = require('moment/moment')\n        moment().format();\n        const startDate = moment(this.state.firstDate).format('YYYYMMDD');\n        const endDate = moment(this.state.secondDate).format('YYYYMMDD');\n        this.props.onGetTemperature(startDate, endDate);\n    }\n\n\n    changeFirstDate = chosenDate => {\n        this.setState({\n            firstDate: chosenDate\n        })\n\n    };\n\n    changeSecondDate = chosenDate => {\n        this.setState({\n            secondDate: chosenDate\n        })\n\n    };\n\n    render() {\n        const {loading, error, data, startDate, endDate} = this.props.highAmpliTemp;\n        let moment = require('moment/moment')\n        moment().format();\n\n        /* if (loading === true) {\n             return (<h1>Loading ....</h1>);\n         } else {\n             if (error !== null) {\n                 return (<h1>Error ....</h1>);\n             } else {*/\n        /*if (data.readingValue && data.dateAndTime) {*/\n        return (\n            <div>\n                <p>Highest Temperature Amplitude</p>\n                <table>\n                    <td>\n                        <p>Pick a start date:</p>\n                        <Calendar\n                            onChange={this.changeFirstDate}\n\n                            value={this.state.firstDate}\n                        />\n\n                    </td>\n                    <td>\n                        <p>Pick an end date:</p>\n                        <Calendar\n                            onChange={this.changeSecondDate}\n                            value={this.state.secondDate}\n                        />\n\n                    </td>\n                </table>\n                <button onClick={this.getResult.bind(this)}>Go!</button>\n                <tr>{this.state.showResult &&\n                <td> the day with the highest temperature amplitude, between the selected dates,\n                    <tr>happened in:  {moment(data.readingDateAndTime).format('DD-MM-YYYY')}</tr>\n                    <tr>with a value of:  {data.readingValue} ºC</tr>\n                </td>}\n                </tr>\n\n            </div>\n        )\n\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        highAmpliTemp: {\n            loading: state.currentTemp.highAmpliTemp.loading,\n            data: state.currentTemp.highAmpliTemp.data,\n            error: state.currentTemp.highAmpliTemp.error,\n            startDate: state.currentTemp.highAmpliTemp.startDate,\n            endDate: state.currentTemp.highAmpliTemp.endDate,\n        }\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetTemperature: (startDate, endDate) => {\n            dispatch(fetchHighAmpliTempDay(startDate, endDate));\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AreaHighAmpliTemp);","import React from 'react';\nimport AreaCurrentTemp from \"./AreaCurrentTemp\";\nimport AreaLastLowTemp from \"./AreaLastLowTemp\";\nimport AreaFirstHighTemp from \"./AreaFirstHighTemp\";\nimport AreaHighAmpliTemp from \"./AreaHighAmpliTemp\";\n\nclass AreaMonitoring extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showCurrent: false,\n            showLastLow: false,\n            showFirstHigh: false,\n            showHighAmpli: false,\n        }\n    }\n\n    clickToShowCurrent() {\n        this.setState({\n            showCurrent: !this.state.showCurrent,\n            showLastLow: false,\n            showFirstHigh: false,\n            showHighAmpli: false,\n        })\n    }\n\n    clickToShowLastLow() {\n        this.setState({\n            showCurrent: false,\n            showLastLow: !this.state.showLastLow,\n            showFirstHigh: false,\n            showHighAmpli: false,\n        })\n    }\n\n    clickToShowFirstHigh() {\n        this.setState({\n            showCurrent: false,\n            showLastLow: false,\n            showFirstHigh: !this.state.showFirstHigh,\n            showHighAmpli: false,\n        })\n    }\n\n    clickToShowHighAmpli() {\n        this.setState({\n            showCurrent: false,\n            showLastLow: false,\n            showFirstHigh: false,\n            showHighAmpli: !this.state.showHighAmpli,\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h4>House Area Monitoring</h4>\n                <table>\n                    {/*buttons to access components*/}\n                    <td>\n                        <button onClick={this.clickToShowCurrent.bind(this)}>Current</button>\n                    </td>\n                    <td>\n                        <button onClick={this.clickToShowLastLow.bind(this)}>Last Lowest Maximum</button>\n                    </td>\n                    <td>\n                        <button onClick={this.clickToShowFirstHigh.bind(this)}>First Highest Maximum</button>\n                    </td>\n                    <td>\n                        <button onClick={this.clickToShowHighAmpli.bind(this)}>Highest Amplitude</button>\n                    </td>\n\n                </table>\n\n                {/*components calls*/}\n                <table>\n                    <tr>\n                        {this.state.showCurrent && <AreaCurrentTemp/>}\n                    </tr>\n                    <tr>\n                        {this.state.showLastLow && <AreaLastLowTemp/>}\n                    </tr>\n                    <tr>\n                        {this.state.showFirstHigh && <AreaFirstHighTemp/>}\n                    </tr>\n                    <tr>\n                        {this.state.showHighAmpli && <AreaHighAmpliTemp/>}\n                    </tr>\n                </table>\n            </div>\n        )\n\n\n    }\n}\n\n\nexport default AreaMonitoring\n","\n\nimport React from \"react\";\nimport AreaMonitoringMenu from \"./HouseArea/AreaMonitoringMenu\";\n\nclass HouseMonitoring extends React.Component {\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <AreaMonitoringMenu/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default HouseMonitoring;\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {fetchRooms} from 'actions/actionsRoom';\nimport {fetchCurrTempRooms, fetchRoomMaxTemp} from \"../../../actions/actionsRoomsMonitoring\";\n\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\nclass RoomMonitoringTable extends React.Component {\n\n    componentDidMount() {\n        this.props.onfetchRooms();\n    }\n\n    fetchCurrTempRooms = (id) => {\n        this.props.onfetchCurrTempRooms(id);\n        this.props.onShowCurrTempRooms();\n    }\n    fetchRoomMaxTemp = (id, day) => {\n        this.props.onfetchRoomMaxTemp(id, day);\n        this.props.onShowfetchRoomMaxTemp();\n    }\n\n\n    render() {\n        const data = this.props.rooms.data;\n        const rows = data.map((row, index) => {\n            return (\n                <tr key={index}>\n                    <td>{row.id} </td>\n                    <td>{row.description}</td>\n                    <td onClick={() => this.fetchCurrTempRooms(row.id)}><i\n                        className=\"nc-icon nc-zoom-split text-primary\"/> <b className=\"text-primary\">Get Temperature</b>\n                    </td>\n                    <td onClick={() => this.fetchRoomMaxTemp(row.id)}><i className=\"nc-icon nc-zoom-split text-danger\"/>\n                        <b className=\"text-danger\">Max Temperature</b></td>\n\n                </tr>)\n        })\n        if (data.length === 0) {\n            return (\n                <p>No rooms or data temperature available.</p>\n            )\n        } else {\n            return (\n                <div className=\"content\">\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Table>\n                                        <thead className=\"text-primary\">\n                                        <tr>\n                                            <th>ID</th>\n                                            <th>Designation</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>{rows}</tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rooms: {\n            data: state.rooms.rooms.data,\n        },\n        roomCurrentTemp: {\n\n            data: state.data,\n        },\n\n        roomMaxTemp: {\n\n            data: state.data,\n        }\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onfetchRooms: () => {\n            dispatch(fetchRooms())\n        },\n        onfetchCurrTempRooms: (id) => {\n            dispatch(fetchCurrTempRooms(id))\n        },\n        onfetchRoomMaxTemp: (id, day) => {\n            dispatch(fetchRoomMaxTemp(id, day))\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RoomMonitoringTable);\n\n","import React, { Component } from 'react';\n\n\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\nclass RoomCurrentTemperature extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        const {loading, data, error} = this.props.roomCurrentTemp;\n\n        let moment = require('moment/moment');\n        moment().format();\n\n            if (loading === true) {\n                return (<h1>Loading ....</h1>);\n            } else {\n        if (error === null) {\n            return (<h5>There are no sensors or temperature readings available for this room.</h5>);\n        } else {\n                return (\n                    <div className=\"content\">\n                        <Row>\n                            <Col md=\"12\">\n                                <Card>\n                                    <CardBody>\n                                        <Table>\n                                            <thead className=\"text-primary\">\n                                            <tr>\n                                                <th>Room{data.roomId}</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            <tr>\n\n                                                <td>Date: {moment(data.readingDateAndTime).format('DD-MM-YYYY')}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Temperature:</td>\n                                                <td>{data.readingValue}ºC</td>\n                                            </tr>\n\n                                            </tbody>\n                                        </Table>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                );\n\n            }\n        }\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n        roomCurrentTemp: {\n            roomId: state.roomCurrentTemp.roomCurrentTemp.roomId,\n            loading: state.roomCurrentTemp.roomCurrentTemp.loading,\n            error: state.roomCurrentTemp.roomCurrentTemp.error,\n            data: state.roomCurrentTemp.roomCurrentTemp.data,\n        }\n\n    }\n};\n\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(RoomCurrentTemperature)\n\n\n","\nimport React, {Component} from 'react';\nimport Calendar from 'react-calendar';\n\n\nimport {connect} from 'react-redux';\nimport {\n    Card,\n    CardBody,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\n\nclass RoomMaxTemperature extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            day: undefined,\n            showResult: false,\n\n        };\n\n        this.chooseDay = this.chooseDay.bind(this)\n    }\n\n    getResult() {\n\n        this.setState(\n            {\n                showResult: !this.state.showResult\n            }\n        );\n\n        let moment = require('moment/moment');\n        moment().format();\n    }\n\n    chooseDay = chosenDay => {\n\n        this.setState({\n            day: chosenDay\n        })\n    }\n\n    render = () => {\n        const {roomId, loading, error, data, day} = this.props.roomMaxTemp;\n        let moment = require('moment/moment');\n        moment().format();\n\n\n        if (loading === true) {\n            return (<h1>Loading ....</h1>);\n        } else {\n\n            return (\n                <div className=\"content\">\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Table>\n                                        <thead className=\"text-primary\">\n                                        <tr>\n                                            <th>Select a day.</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr>\n\n                                            <tr>\n                                                <Calendar\n                                                    onchange={this.chooseDay}\n                                                    value={this.state.day}\n                                                />\n                                            </tr>\n                                            <tr>\n\n                                                <button onClick={this.getResult.bind(this)}>Go!</button>\n\n                                                <p>{this.state.showResult && <p>{data.readingValue}</p>}</p>\n                                                <p>Attention! This option is not currently available. We are working on it.\n                                                    It will be available as soon as possible.</p>\n\n                                            </tr>\n\n\n                                        </tr>\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n\n        }\n\n    }\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n        roomMaxTemp: {\n        roomId: state.roomCurrentTemp.roomMaxTemp.roomId,\n        loading: state.roomCurrentTemp.roomMaxTemp.loading,\n        error: state.roomCurrentTemp.roomMaxTemp.error,\n        data: state.roomCurrentTemp.roomMaxTemp.data,\n        day: state.roomCurrentTemp.roomMaxTemp.data,\n    }\n    }\n    };\n\n    export default connect(\n    mapStateToProps,\n    null\n    )(RoomMaxTemperature);\n\n\n","import React from \"react\";\nimport RoomMonitoringTable from \"./RoomMonitoringTable.js\";\nimport RoomCurrentTemperature from \"./RoomCurrentTemperature.js\";\nimport RoomMaxTemperature from \"./RoomMaxTemperature\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\n\nclass RoomMonitoring extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHiddenCreate: true,\n            showCurrTempRooms: false,\n            showFetchRoomMaxTemp: false,\n        }\n    }\n\n    toggleHiddenRooms() {\n        this.setState({\n            isHiddenCreate: !this.state.isHiddenCreate\n        })\n    }\n\n    toggleHiddens() {\n        this.setState({\n            isHidden: !this.state.isHidden\n        })\n    }\n\n    showCurrTempRooms() {\n        this.setState({\n            showCurrTempRooms: true,\n            showFetchRoomMaxTemp: false,\n        })\n    }\n\n    showFetchRoomMaxTemp() {\n        this.setState({\n            showFetchRoomMaxTemp: true,\n            showCurrTempRooms: false,\n        })\n    }\n\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <h4>Room Monitoring</h4>\n                    <tr>\n                        <td>{this.state.isHiddenCreate &&\n                        <RoomMonitoringTable onShowCurrTempRooms={this.showCurrTempRooms.bind(this)}\n                                             onShowfetchRoomMaxTemp={this.showFetchRoomMaxTemp.bind(this)}/>}</td>\n                        <td>{this.state.isHiddenCreate && this.state.showCurrTempRooms && <RoomCurrentTemperature/>}</td>\n                        <td>{this.state.isHiddenCreate && this.state.showFetchRoomMaxTemp && <RoomMaxTemperature/>}</td>\n                    </tr>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default RoomMonitoring;\n\n\n","\nimport React from \"react\";\nimport RoomMonitoring from \"../components/project/RoomMonitoringComponents/RoomMonitoring\";\n\nclass RoomMonitoringMenu extends React.Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <RoomMonitoring/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default RoomMonitoringMenu;","import axios from 'axios';\nimport {applyMiddleware as dispatch} from \"redux\";\nimport Home from \"../views/Home\";\nimport HouseArea from \"../views/HouseArea\";\nimport Room from \"../views/Room\";\nimport HouseGrid from \"../views/HouseGrid\";\nimport HouseMonitoring from \"../components/project/HouseMonitoring/HouseMonitoring\";\nimport RoomMonitoringMenu from \"../views/RoomMonitoringMenu\";\n\nexport const USER_LOGIN_STARTED = 'USER_LOGIN_STARTED';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport var routes = [];\n\nexport const sendUsernamePassword = ({username, password}) => {\n        return axios\n            .post(`https://localhost:8443/login`, JSON.stringify({\n                username,\n                password\n            }), {headers: {'Content-Type': 'application/json'}})\n            .then(response => {\n                setRoutes(username);\n                console.log(routes);\n                return response.headers['authorization'];\n            })\n            .then(token => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('token', JSON.stringify(token));\n                window.location.reload();\n            })\n    }\n;\n\nfunction setRoutes(username) {\n    if (username === \"admin\") {\n        routes = [\n            {\n                path: \"/Home\",\n                name: \"Home\",\n                icon: \"nc-icon nc-bank\",\n                component: Home,\n                layout: \"/admin\"\n            },\n            {\n                path: \"/geoarea\",\n                name: \"House Area\",\n                icon: \"nc-icon nc-pin-3\",\n                component: HouseArea,\n                layout: \"/admin\"\n            },\n            {\n                path: \"/rooms\",\n                name: \"Rooms\",\n                icon: \"nc-icon nc-app\",\n                component: Room,\n                layout: \"/admin\"\n            },\n            {\n                path: \"/housegrids\",\n                name: \"Power Grids\",\n                icon: \"nc-icon nc-layout-11\",\n                component: HouseGrid,\n                layout: \"/admin\"\n            }];\n    } else\n        routes = [\n            {\n                path: \"/monitoring\",\n                name: \"House Area\",\n                icon: \"nc-icon nc-chart-bar-32\",\n                component: HouseMonitoring,\n                layout: \"/admin\"\n            },\n            {\n                path: \"/roomMonitoring\",\n                name: \"Room Monitoring\",\n                icon: \"nc-icon nc-chart-bar-32\",\n                component: RoomMonitoringMenu,\n                layout: \"/admin\"\n            }];\n    localStorage.setItem('routes', JSON.stringify(routes));\n}\n\nexport const logout = () => {\n    // remove user from local storage to log user out\n    localStorage.removeItem('token');\n    return {\n        type: USER_LOGOUT\n    }\n}\n\nexport function userLoginStarted() {\n    return {\n        type: USER_LOGIN_STARTED,\n    }\n}\n\nexport function userLoginSuccess(response) {\n    return {\n        type: USER_LOGIN_SUCCESS,\n        payload: response\n    }\n}\n\nexport function userLoginFailure(message) {\n    return {\n        type: USER_LOGIN_FAILURE,\n        payload: {\n            error: message\n        }\n    }\n}\n\n\n\n","import {\n    USER_LOGIN_STARTED,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAILURE\n} from '../actions/actionsLogin'\n\nexport const initialState = {\n    currentUser: {\n        isLoggedIn: false,\n        error: null\n    }\n};\n\nexport function loginReducer(state = initialState, action) {\n    switch (action.type) {\n        case USER_LOGIN_STARTED:\n            return {\n                ...state,\n                currentUser: {\n                    isLoggedIn: false,\n                    error: null\n                }\n            };\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                currentUser: {\n                    isLoggedIn: true,\n                    error: null\n                }\n            };\n        case USER_LOGIN_FAILURE:\n            return {\n                ...state,\n                currentUser: {\n                    isLoggedIn: false,\n                    error: \"Username or password are incorrect. Please try again.\"\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport default loginReducer;\n","\nimport {\n    FETCH_GEOAREAS_STARTED,\n    FETCH_GEOAREAS_SUCCESS,\n    FETCH_GEOAREAS_FAILURE,\n    ADD_GEOAREA,\n    FETCH_GEOAREASTYPES_SUCCESS,\n    FETCH_GEOAREA_DETAILS_SUCCESS,\n    FETCH_GEOAREA_DETAILS_FAILURE,\n    FETCH_GEOAREA_SENSORS_SUCCESS,\n    FETCH_GEOAREA_SENSORS_FAILURE,\n    ADD_EXT_SENSOR,\n    FETCH_SENSORTYPES_SUCCESS,\n    DELETE_EXT_SENSOR,\n\n} from '../actions/actionsGeoArea'\n\nconst initialstate = {\n    geoareas: {\n        loading: false,\n        error: null,\n        data: [],\n    },\n    details: {\n        gaId: '',\n        loading: false,\n        error: null,\n        data: {},\n    },\n    sensors: {\n        data: [],\n        error: null,\n        gaId: null\n    },\n    gaTypes: {\n        data: []\n    }\n};\n\n\nfunction geoAreaReducer(state = initialstate, action) {\n    switch (action.type) {\n        case FETCH_GEOAREAS_STARTED:\n            return {\n                ...state,\n                geoareas: {\n                    loading: true,\n                    error: null,\n                    data: []\n                }\n            }\n        case FETCH_GEOAREAS_SUCCESS:\n            return {\n                ...state,\n                geoareas: {\n                    loading: false,\n                    error: null,\n                    data: [...action.payload.data]\n                }\n            }\n        case FETCH_GEOAREAS_FAILURE:\n            return {\n                ...state,\n                geoareas: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: [],\n                }\n            }\n        case FETCH_GEOAREA_DETAILS_SUCCESS:\n            return {\n                ...state,\n                details: {\n                    loading: false,\n                    error: null,\n                    data: { ...action.payload.data },\n                    id: state.details.id,\n                }\n            }\n        case FETCH_GEOAREA_DETAILS_FAILURE:\n            return {\n                ...state,\n                details: {\n                    loading: false,\n                    error: action.payload.error,\n                    data: {},\n                    id: 0,\n                }\n            }\n        case ADD_GEOAREA:\n            return {\n                ...state,\n                data: { ...action.payload.data },\n            }\n\n        case FETCH_GEOAREASTYPES_SUCCESS:\n            return {\n                ...state,\n                gaTypes: {\n                    data: [...action.payload.data],\n                }\n            }\n\n        case FETCH_GEOAREA_SENSORS_SUCCESS:\n            return {\n                ...state,\n                sensors: {\n                    data: [...action.payload.data],\n                    error: null,\n                    gaId: action.payload.gaId\n                }\n            }\n        case FETCH_GEOAREA_SENSORS_FAILURE:\n            return {\n                ...state,\n                sensors: {\n                    data: [],\n                    error: action.payload.error,\n                    gaId: action.payload.gaId\n                }\n            }\n        case DELETE_EXT_SENSOR:\n            return {\n                ...state\n            }\n\n        default:\n            return state\n    }\n}\nexport default geoAreaReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport roomReducer from '../reducers/roomReducer';\nimport gridsReducer from '../reducers/gridsReducer';\nimport roomMonitoringReducer from '../reducers/roomMonitoringReducer';\nimport areaMonitoringReducer from '../reducers/areaMonitoringReducer';\nimport { combineReducers } from 'redux';\nimport loginReducer from \"../reducers/loginReducer\";\nimport geoAreaReducer from \"../reducers/geoAreaReducer\";\n\nconst rootReducer = combineReducers({\n    rooms: roomReducer,\n    grids: gridsReducer,\n    geoareas: geoAreaReducer,\n    roomCurrentTemp: roomMonitoringReducer,\n    currentTemp: areaMonitoringReducer,\n    login: loginReducer\n})\n\nexport default function configureStore() {\n    console.log(\"Store: configureStore\");\n    return createStore(rootReducer, applyMiddleware(thunk));\n}","import React, {Component} from 'react'\nimport {sendUsernamePassword} from '../actions/actionsLogin';\nimport { Card, CardImg, Spinner, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport logo from \"../logo.png\";\n\n\nexport class LoginPage extends Component {\n    constructor(props) {\n        super(props);\n\n        // reset login status\n        //this.props.dispatch(userActions.logout());\n\n        this.state = {\n            username: '',\n            password: '',\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({submitted: true});\n        const {username, password} = this.state;\n        console.log({username}, {password});\n        sendUsernamePassword({username, password});\n    }\n\n\n    render() {\n        const {loggingIn} = this.props;\n        const {username, password, submitted} = this.state;\n        return (\n            <div style={{position:\"absolute\", left:'50%', top:'50%', width: '20%', transform:'translate(-50%,-50%)'}}>\n                {/*<div className=\"alert alert-info\">\n                    Username: admin<br/>\n                    Password: admin123\n                </div>*/}\n                <Card>\n                    <img style={{\n                        display: 'block',\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        width: '50%'}} src={logo} alt=\"Card image cap\" />\n                    <CardBody>\n                        <form name=\"form\" onSubmit={this.handleSubmit}>\n                            <div>\n                                <label htmlFor=\"username\">Username</label>\n                                <input type=\"text\" className=\"form-control\" name=\"username\" value={username}\n                                       onChange={this.handleChange}/>\n                                {submitted && !username &&\n                                <div className=\"help-block\">Username is required</div>\n                                }\n                            </div>\n                            <div>\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\" className=\"form-control\" name=\"password\" value={password}\n                                       onChange={this.handleChange}/>\n                                {submitted && !password &&\n                                <div className=\"help-block\">Password is required</div>\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <Button className=\"btn btn-primary\" onSubmit={this.handleSubmit}>Login</Button>\n                                {loggingIn && <Spinner color=\"success\" />}\n                            </div>\n                        </form>\n                    </CardBody>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {loggingIn} = state.authentication;\n    return {\n        loggingIn\n    };\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.png\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n    this.sidebar = React.createRef();\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.sidebar.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          <a\n            href=\"http://localhost:3000/admin/Home\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"http://localhost:3000/admin/Home\"\n            className=\"simple-text logo-normal\"\n          >\n            Smart Home\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref={this.sidebar}>\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"../components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"../components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\nimport Home from \"../views/Home\";\nimport HouseArea from \"../views/HouseArea\";\nimport Room from \"../views/Room\";\nimport HouseGrid from \"../views/HouseGrid\";\n//import {routes} from \"../actions/actionsLogin\";\n\nvar routes = [\n  {\n    path: \"/Home\",\n    name: \"Home\",\n    icon: \"nc-icon nc-bank\",\n    component: Home,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/geoarea\",\n    name: \"House Area\",\n    icon: \"nc-icon nc-pin-3\",\n    component: HouseArea,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rooms\",\n    name: \"Rooms\",\n    icon: \"nc-icon nc-app\",\n    component: Room,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/housegrids\",\n    name: \"Power Grids\",\n    icon: \"nc-icon nc-layout-11\",\n    component: HouseGrid,\n    layout: \"/admin\"\n  }];\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = color => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport DemoNavbar from \"../components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"../components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\nimport HouseMonitoring from \"../components/project/HouseMonitoring/HouseMonitoring\";\nimport RoomMonitoringMenu from \"../views/RoomMonitoringMenu\";\nimport Home from \"../views/Home\";\n//import {routes} from \"../actions/actionsLogin\";\n\nvar routes = [\n    {\n        path: \"/Home\",\n        name: \"Home\",\n        icon: \"nc-icon nc-bank\",\n        component: Home,\n        layout: \"/regular\"\n    }, {\n        path: \"/monitoring\",\n        name: \"House Area\",\n        icon: \"nc-icon nc-chart-bar-32\",\n        component: HouseMonitoring,\n        layout: \"/regular\"\n    },\n    {\n        path: \"/roomMonitoring\",\n        name: \"Room\",\n        icon: \"nc-icon nc-chart-bar-32\",\n        component: RoomMonitoringMenu,\n        layout: \"/regular\"\n    }];\n\nvar ps;\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            backgroundColor: \"black\",\n            activeColor: \"info\"\n        };\n        this.mainPanel = React.createRef();\n    }\n\n    componentDidMount() {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n            ps = new PerfectScrollbar(this.mainPanel.current);\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }\n    }\n\n    componentWillUnmount() {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n            ps.destroy();\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }\n    }\n\n    componentDidUpdate(e) {\n        if (e.history.action === \"PUSH\") {\n            this.mainPanel.current.scrollTop = 0;\n            document.scrollingElement.scrollTop = 0;\n        }\n    }\n\n    handleActiveClick = color => {\n        this.setState({activeColor: color});\n    };\n    handleBgClick = color => {\n        this.setState({backgroundColor: color});\n    };\n\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Sidebar\n                    {...this.props}\n                    routes={routes}\n                    bgColor={this.state.backgroundColor}\n                    activeColor={this.state.activeColor}\n                />\n                <div className=\"main-panel\" ref={this.mainPanel}>\n                    <DemoNavbar {...this.props} />\n                    <Switch>\n                        {routes.map((prop, key) => {\n                            return (\n                                <Route\n                                    path={prop.layout + prop.path}\n                                    component={prop.component}\n                                    key={key}\n                                />\n                            );\n                        })}\n                    </Switch>\n                    <Footer fluid/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import Room from \"views/Room\";\nimport Home from \"views/Home\";\nimport HouseArea from \"views/HouseArea\";\nimport HouseGrid from \"views/HouseGrid\";\nimport HouseMonitoring from \"./components/project/HouseMonitoring/HouseMonitoring\";\nimport RoomMonitoringMenu from \"views/RoomMonitoringMenu\";\n\n\nvar routes = [\n  {\n    path: \"/Home\",\n    name: \"Home\",\n    icon: \"nc-icon nc-bank\",\n    component: Home,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/geoarea\",\n    name: \"House Area\",\n    icon: \"nc-icon nc-pin-3\",\n    component: HouseArea,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rooms\",\n    name: \"Rooms\",\n    icon: \"nc-icon nc-app\",\n    component: Room,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/housegrids\",\n    name: \"Power Grids\",\n    icon: \"nc-icon nc-layout-11\",\n    component: HouseGrid,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/monitoring\",\n    name: \"House Area\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: HouseMonitoring,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/roomMonitoring\",\n    name: \"Room Monitoring\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: RoomMonitoringMenu,\n    layout: \"/admin\"\n  },\n\n];\nexport default routes;\n","import React from \"react\";\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Container,\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            dropdownOpen: false,\n            color: \"transparent\"\n        };\n        this.toggle = this.toggle.bind(this);\n        this.dropdownToggle = this.dropdownToggle.bind(this);\n        this.sidebarToggle = React.createRef();\n    }\n    toggle() {\n        if (this.state.isOpen) {\n            this.setState({\n                color: \"transparent\"\n            });\n        } else {\n            this.setState({\n                color: \"dark\"\n            });\n        }\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    dropdownToggle(e) {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    getBrand() {\n        let brandName = \"\";\n        routes.map((prop, key) => {\n            if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n                brandName = prop.name;\n            }\n            return null;\n        });\n        return brandName;\n    }\n    openSidebar() {\n        document.documentElement.classList.toggle(\"nav-open\");\n        this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n    // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n    updateColor() {\n        if (window.innerWidth < 993 && this.state.isOpen) {\n            this.setState({\n                color: \"dark\"\n            });\n        } else {\n            this.setState({\n                color: \"transparent\"\n            });\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n    componentDidUpdate(e) {\n        if (\n            window.innerWidth < 993 &&\n            e.history.location.pathname !== e.location.pathname &&\n            document.documentElement.className.indexOf(\"nav-open\") !== -1\n        ) {\n            document.documentElement.classList.toggle(\"nav-open\");\n            this.sidebarToggle.current.classList.toggle(\"toggled\");\n        }\n    }\n    render() {\n        return (\n            // add or remove classes depending if we are on full-screen-maps page or not\n            <Navbar\n                color={\n                    this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n                        ? \"dark\"\n                        : this.state.color\n                }\n                expand=\"lg\"\n                className={\n                    this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n                        ? \"navbar-absolute fixed-top\"\n                        : \"navbar-absolute fixed-top \" +\n                        (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n                }\n            >\n                <Container fluid>\n                    <div className=\"navbar-wrapper\">\n                        <div className=\"navbar-toggle\">\n                            <button\n                                type=\"button\"\n                                ref={this.sidebarToggle}\n                                className=\"navbar-toggler\"\n                                onClick={() => this.openSidebar()}\n                            >\n                                <span className=\"navbar-toggler-bar bar1\" />\n                                <span className=\"navbar-toggler-bar bar2\" />\n                                <span className=\"navbar-toggler-bar bar3\" />\n                            </button>\n                        </div>\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n                    </div>\n                    <NavbarToggler onClick={this.toggle}>\n                        <span className=\"navbar-toggler-bar navbar-kebab\" />\n                        <span className=\"navbar-toggler-bar navbar-kebab\" />\n                        <span className=\"navbar-toggler-bar navbar-kebab\" />\n                    </NavbarToggler>\n                    <Collapse\n                        isOpen={this.state.isOpen}\n                        navbar\n                        className=\"justify-content-end\"\n                    >\n\n                        <Nav navbar>\n                            <Dropdown\n                                nav\n                                isOpen={this.state.dropdownOpen}\n                                toggle={e => this.dropdownToggle(e)}\n                            >\n                                <DropdownToggle caret nav>\n                                    <i className=\"nc-icon nc-circle-10\" />\n                                    <p>\n                                        <span className=\"d-lg-none d-md-block\">Account</span>\n                                    </p>\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem onClick={this.handleSelection} tag=\"a\">Logout ?</DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n\n    handleSelection() {\n        localStorage.removeItem('token');\n        window.location.reload();\n    }\n}\n\nexport default Header;","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                SmartHome Group 6 &copy; {1900 + new Date().getYear()}\n              </div>\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {createBrowserHistory} from \"history\";\nimport {Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\nimport {LoginPage} from 'LoginPage';\nimport decode from 'jwt-decode';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport RegularLayout from \"layouts/Regular.jsx\";\n\nconst hist = createBrowserHistory();\nconst store = configureStore();\n\n\nif (localStorage.getItem('token') == null) {\n    ReactDOM.render(\n        <Router history={hist}>\n            <Provider store={store}>\n                <div>\n                    <LoginPage/>\n                </div>\n            </Provider>\n        </Router>,\n        document.getElementById(\"root\")\n    );\n}\nelse if (decode(localStorage.getItem('token')).sub === \"admin\") {\n    ReactDOM.render(\n        <Router history={hist}>\n            <Provider store={store}>\n                <Switch>\n                    <Route path=\"/admin\" render={props => <AdminLayout {...props} />}/>\n                    <Redirect to=\"/admin/Home\"/>\n                </Switch>\n            </Provider>\n        </Router>,\n        document.getElementById(\"root\")\n    );\n}\nelse if (decode(localStorage.getItem('token')).sub === \"regular\") {\n    ReactDOM.render(\n        <Router history={hist}>\n            <Provider store={store}>\n                <Switch>\n                    <Route path=\"/regular\" render={props => <RegularLayout {...props} />}/>\n                    <Redirect to=\"/regular/Home\"/>\n                </Switch>\n            </Provider>\n        </Router>,\n        document.getElementById(\"root\")\n    );\n}","module.exports = __webpack_public_path__ + \"static/media/logo.f604bc24.png\";"],"sourceRoot":""}