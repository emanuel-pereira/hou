@startuml
skinparam sequence {
         	ArrowColor SteelBlue
         	ActorBorderColor Dimgray
         	LifeLineBorderColor MidnightBlue
         	LifeLineBackgroundColor #A9DCDF

         	ParticipantBorderColor Dimgray
         	ParticipantBackgroundColor SteelBlue
         	ParticipantFontName Calibri Bold
         	ParticipantFontSize 17
         	ParticipantFontColor Ivory

         	ActorBackgroundColor SteelBlue
         	ActorFontColor MidnightBlue
         	ActorFontSize 17
         	ActorFontName Aapex

         }
skinparam note {
BorderColor SteelBlue
}
autonumber
hidefootbox
actor HouseAdministrator


HouseAdministrator -> ":DataImportUI": Ask import
create ":DataImportCTRL"


":DataImportUI" -> ":DataImportCTRL": create()
":DataImportUI" --> "HouseAdministrator": ask for file name and path
":DataImportUI" <- "HouseAdministrator": type  file name and path


":DataImportUI" -> ":DataImportCTRL": importReadingsFromHouseFile(filepath)
":DataImportCTRL" -> ":DataImport": importFromHouseFile(filepath)


create ":{FileReaderReadings}"
":DataImport" -> ":{FileReaderReadings}": create(filepath)
note right #FFFF
{FileReaderReadings} can be:
    XMLReading
    JSONReading
    CSVReading
    end note

":DataImport" -> ":{FileReaderReadings}": importReadingsToHouse(filePath)
":DataImport" -> "rL:RoomList": rL=getRoomList()

loop for each Room in rL

":DataImport" -> "sL:SensorList": sL=getSensorListRoom()

loop for each sensor in sL
":DataImport" -> "rL:ReadingList": rL=getReadingListRoom()

create "r:Reading"

":DataImport" -> "r:Reading": rL.newReading(date,value,unit)
":DataImport" -> "rL:ReadingList": rL.addReading(r)
":DataImport" -> ":Repositories": saveReading(r)

end
end
":DataImportUI" -> ":DataImportCTRL": showNumberOfReadsHouse()
":DataImportCTRL" -> ":DataImport": getNumberOfReadsHouse()




HouseAdministrator<--":DataImportUI": Shows the number \nof readings of each sensor in house
@enduml


