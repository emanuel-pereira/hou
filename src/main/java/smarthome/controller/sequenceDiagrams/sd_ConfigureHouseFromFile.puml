@startuml
autonumber
hidefootbox


skinparam sequence {
	ArrowColor SteelBlue
	ActorBorderColor Dimgray
	LifeLineBorderColor MidnightBlue
	LifeLineBackgroundColor #A9DCDF

	ParticipantBorderColor Dimgray
	ParticipantBackgroundColor SteelBlue
	ParticipantFontName Calibri Bold
	ParticipantFontSize 17
	ParticipantFontColor Ivory

	ActorBackgroundColor SteelBlue
	ActorFontColor MidnightBlue
	ActorFontSize 17
	ActorFontName Aapex

}

skinparam note {
BorderColor SteelBlue
}

actor SysAdmin

create ":ConfigureHouseUI"
SysAdmin -> ":ConfigureHouseUI": Configure the House\n from a file


create ":ConfigureHouseCTRL"
":ConfigureHouseUI" -> ":ConfigureHouseCTRL": create(gaList)
":ConfigureHouseUI" -> ":ConfigureHouseCTRL": showGAListDTO()
":ConfigureHouseCTRL" -> ":gaList:GAList": getGAList()

create ":GeographicalAreaMapper"
":ConfigureHouseCTRL" -> ":GeographicalAreaMapper":create()

ref over ":ConfigureHouseCTRL",":GeographicalAreaMapper":Convert GeoAreas to Dtos

SysAdmin<--":ConfigureHouseUI": showGAListDTO
SysAdmin -> ":ConfigureHouseUI": gaId = Choose Geographical Area

SysAdmin<--":ConfigureHouseUI": ask for House Location
SysAdmin -> ":ConfigureHouseUI": location = insert\n House Location coordinates

":ConfigureHouseUI" -> ":ConfigureHouseCTRL": configureHouseFromFileCTRL(gaId,location)


create ":DataImport"
":ConfigureHouseCTRL"->":DataImport":create(gaList)
":ConfigureHouseCTRL"->":DataImport": importHouse()

create ":{FileReaderHouse}"
":DataImport"->":{FileReaderHouse}": create(file)
note right #FFFF
{FileReaderHouse} can be:
    JSONHouse
end note

":DataImport" -> ":DataImport": readConfigFile()

ref over ":DataImport", ":{FileReaderHouse}": Create file reader class based on file extension

":DataImport" -> ":{FileReaderHouse}": importHouseConfiguration(path)
ref over ":ConfigureHouseCTRL",":DataImport",":{FileReaderHouse}",":DataImport",":House":Set Address, add Rooms and Grids (and add Rooms to their respective Grid) that were in the file

":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :String = showAddressInString()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :String = showGAInString()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :int = getRoomListSizeCTRL()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :int = getGridListSizeCTRL()


SysAdmin<--":ConfigureHouseUI": Show success message with the House's\n address, ga, number of Rooms and Grids
@enduml