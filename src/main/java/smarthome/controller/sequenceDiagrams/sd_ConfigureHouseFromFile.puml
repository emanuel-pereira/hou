@startuml
autonumber
hidefootbox


skinparam sequence {
	ArrowColor SteelBlue
	ActorBorderColor Dimgray
	LifeLineBorderColor MidnightBlue
	LifeLineBackgroundColor #A9DCDF

	ParticipantBorderColor Dimgray
	ParticipantBackgroundColor SteelBlue
	ParticipantFontName Calibri Bold
	ParticipantFontSize 17
	ParticipantFontColor Ivory

	ActorBackgroundColor SteelBlue
	ActorFontColor MidnightBlue
	ActorFontSize 17
	ActorFontName Aapex

}

skinparam note {
BorderColor SteelBlue
}

actor SystemAdmin

create ":ConfigureHouseUI"
SystemAdmin -> ":ConfigureHouseUI": Configure the House\n from a file


create ":ConfigureHouseCTRL"
":ConfigureHouseUI" -> ":ConfigureHouseCTRL": create(gaList)
":ConfigureHouseUI" -> ":ConfigureHouseCTRL": showGAListDTO()
":ConfigureHouseCTRL" -> "gaList:GAList": getGAList()

create ":GeographicalAreaMapper"
":ConfigureHouseCTRL" -> ":GeographicalAreaMapper":create()

ref over ":ConfigureHouseCTRL",":GeographicalAreaMapper":Convert GeoAreas to DTOs

SystemAdmin<--":ConfigureHouseUI": Show list of available\nGeographical Areas

SystemAdmin -> ":ConfigureHouseUI": Choose Geographical Area and\ninsert House GPS coordinates

SystemAdmin<--":ConfigureHouseUI": Ask for House Location

":ConfigureHouseUI" -> ":ConfigureHouseCTRL": configureHouseFromFileCTRL\n(gaId,location)


create ":DataImport"
":ConfigureHouseCTRL"->":DataImport":create(gaList)
":ConfigureHouseCTRL"->":DataImport": importHouse()


note right #FFFF
{FileReaderHouse} can be:
    JSONHouse
end note

":DataImport" -> ":DataImport": fRH =\ngetHouseConfigFileReader()



":DataImport" -> "fRH:{FileReaderHouse}": importHouseConfiguration\n(path)
ref over "fRH:{FileReaderHouse}":Set Address, add Rooms and Grids\n(and add Rooms to their respective Grid)\nthat were in the file


create "location:Location"
":ConfigureHouseCTRL" -> "location:Location":create(inputLocation)
":ConfigureHouseCTRL" -> ":House": ad = getAddress()
":ConfigureHouseCTRL"->"ad:Address":setLocation(location)
":ConfigureHouseCTRL" -> ":GAList":getById(gaId)
":ConfigureHouseCTRL" -> ":House":setHouseGA(geoArea)


":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :String = showAddressInString()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :String = showGAInString()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :int = getRoomListSizeCTRL()
":ConfigureHouseUI" -> ":ConfigureHouseCTRL" :int = getGridListSizeCTRL()


SystemAdmin<--":ConfigureHouseUI": Show success message\nwith the House's number of Rooms\nand Grids, Address and GA
@enduml