@startuml

skinparam sequence {
         	ArrowColor SteelBlue
         	ActorBorderColor Dimgray
         	LifeLineBorderColor MidnightBlue
         	LifeLineBackgroundColor #A9DCDF

         	ParticipantBorderColor Dimgray
         	ParticipantBackgroundColor SteelBlue
         	ParticipantFontName Calibri Bold
         	ParticipantFontSize 17
         	ParticipantFontColor Ivory

         	ActorBackgroundColor SteelBlue
         	ActorFontColor MidnightBlue
         	ActorFontSize 17
         	ActorFontName Aapex

         }
skinparam note {
BorderColor SteelBlue
}
autonumber
hidefootbox
actor Administrator


Administrator -> ":ComfortLevelUI": Check comfort level in a room
create ":ComfortLevelCTRL"
":ComfortLevelUI" -> ":ComfortLevelCTRL": create()

create ":ComfortLevelService"
":ComfortLevelCTRL" -> ":ComfortLevelService": create()


":ComfortLevelUI" -> ":ComfortLevelCTRL": showRooms()




":ComfortLevelCTRL" -> ":ComfortLevelService": getRoomList()
":ComfortLevelService" -> ":RoomRepo": getRoomList()
":RoomRepo" -> "RoomCRUD": findAll()
":RoomRepo" -> ":RoomRepo": toDTO()

":ComfortLevelUI" -->> Administrator: Show list of rooms


Administrator -> ":ComfortLevelUI": Select room
":ComfortLevelUI" -> ":ComfortLevelCTRL": requestSensorByRoomAndType\n(roomID,temperature)
":ComfortLevelCTRL" -> ":ComfortLevelService": getSensorByRoomAndType\n(roomID,temperature)
":ComfortLevelService" -> ":InternalSensorRepo": getSensorByRoomAndType\n(roomID,temperature)
":InternalSensorRepo" -> "InternalSensor\nCRUD": findSensorsByRoom(roomID)
":InternalSensorRepo" -> ":InternalSensorRepo": getSensorByType(temperature)

Administrator <<-- ":ComfortLevelUI": Ask to input time interval\nand comfort category
Administrator -> ":ComfortLevelUI": Input time interval and category


":ComfortLevelUI" -> ":ComfortLevelCTRL": requestReadingsOutsideComfortLevel\n(startDate,endDate,category)
":ComfortLevelCTRL" -> ":ComfortLevelService": getReadingsOutsideComfortLevel\n(startDate,endDate,category)


ref over ":ComfortLevelService",":InternalSensorRepo",":ExternalSensorRepo":Populate list with instants where readings are above or below comfort level parameters


":ComfortLevelService" -> ":ComfortLevelService": toDTO()


":ComfortLevelUI" -->> Administrator: Show results







@enduml
